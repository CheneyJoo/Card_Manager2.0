//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace SYSEntity
{
    using System;
    using System.Xml.Serialization;
    using NBear.Common;


    [System.SerializableAttribute()]
    public partial class SYS_MENUArrayList : NBear.Common.EntityArrayList<SYSEntity.SYS_MENU>
    {
    }

    [System.SerializableAttribute()]
    [NBear.Common.EmbeddedEntityConfigurationAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<EntityConfiguration xmlns:xsd=\"http://w" +
    "ww.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" " +
    "name=\"SYSEntity.SYS_MENU\" isReadOnly=\"false\" isAutoPreLoad=\"false\" isBatchUpdate" +
    "=\"false\" isRelation=\"false\" mappingName=\"SYS_MENU\" batchSize=\"10\">\r\n  <Propertie" +
    "s>\r\n    <Property name=\"MENU_ID\" type=\"System.String\" isInherited=\"false\" isRead" +
    "Only=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriend" +
    "Key=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isI" +
    "ndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"MENU_ID\" map" +
    "pingColumnType=\"System.String\" sqlType=\"varchar(36)\" isPrimaryKey=\"true\" isNotNu" +
    "ll=\"true\" />\r\n    <Property name=\"PARENT_MENU_ID\" type=\"System.String\" isInherit" +
    "ed=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery" +
    "=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexPro" +
    "perty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingN" +
    "ame=\"PARENT_MENU_ID\" mappingColumnType=\"System.String\" sqlType=\"varchar(36)\" isP" +
    "rimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"MENU_CODE\" type=\"Sys" +
    "tem.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isCont" +
    "ained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationK" +
    "ey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIg" +
    "nore=\"false\" mappingName=\"MENU_CODE\" mappingColumnType=\"System.String\" sqlType=\"" +
    "varchar(100)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"MEN" +
    "U_NAME\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUn" +
    "it=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"f" +
    "alse\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" " +
    "isSerializationIgnore=\"false\" mappingName=\"MENU_NAME\" mappingColumnType=\"System." +
    "String\" sqlType=\"varchar(200)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <P" +
    "roperty name=\"MENU_ENAME\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"f" +
    "alse\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"fa" +
    "lse\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPro" +
    "pertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"MENU_ENAME\" mapping" +
    "ColumnType=\"System.String\" sqlType=\"varchar(200)\" isPrimaryKey=\"false\" isNotNull" +
    "=\"false\" />\r\n    <Property name=\"MENU_TYPE\" type=\"System.String\" isInherited=\"fa" +
    "lse\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"fals" +
    "e\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=" +
    "\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"M" +
    "ENU_TYPE\" mappingColumnType=\"System.String\" sqlType=\"varchar(3)\" isPrimaryKey=\"f" +
    "alse\" isNotNull=\"false\" />\r\n    <Property name=\"MENU_URL\" type=\"System.String\" i" +
    "sInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\"" +
    " isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" is" +
    "IndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" " +
    "mappingName=\"MENU_URL\" mappingColumnType=\"System.String\" sqlType=\"varchar(200)\" " +
    "isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"MENU_ICON_URL\" ty" +
    "pe=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\"" +
    " isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRe" +
    "lationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializ" +
    "ationIgnore=\"false\" mappingName=\"MENU_ICON_URL\" mappingColumnType=\"System.String" +
    "\" sqlType=\"varchar(200)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Propert" +
    "y name=\"MENU_ORDER\" type=\"System.Int32\" isInherited=\"false\" isReadOnly=\"false\" i" +
    "sCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" is" +
    "LazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDe" +
    "sc=\"false\" isSerializationIgnore=\"false\" mappingName=\"MENU_ORDER\" mappingColumnT" +
    "ype=\"System.Int32\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    " +
    "<Property name=\"MENU_DESC\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"" +
    "false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"f" +
    "alse\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPr" +
    "opertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"MENU_DESC\" mapping" +
    "ColumnType=\"System.String\" sqlType=\"varchar(1000)\" isPrimaryKey=\"false\" isNotNul" +
    "l=\"false\" />\r\n    <Property name=\"MENU_EDESC\" type=\"System.String\" isInherited=\"" +
    "false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"fa" +
    "lse\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexPropert" +
    "y=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=" +
    "\"MENU_EDESC\" mappingColumnType=\"System.String\" sqlType=\"varchar(1000)\" isPrimary" +
    "Key=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"STATUS\" type=\"System.Int32" +
    "\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"fal" +
    "se\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\"" +
    " isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"fals" +
    "e\" mappingName=\"STATUS\" mappingColumnType=\"System.Int32\" sqlType=\"int\" isPrimary" +
    "Key=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"CREATED_TIME\" type=\"System" +
    ".Nullable`1[System.DateTime]\" isInherited=\"false\" sqlDefaultValue=\"getdate()\" is" +
    "ReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFr" +
    "iendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\"" +
    " isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"CREATED_" +
    "TIME\" mappingColumnType=\"System.Nullable`1[System.DateTime]\" sqlType=\"datetime\" " +
    "isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"OPEN_TYPE\" type=\"" +
    "System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isC" +
    "ontained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelati" +
    "onKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializatio" +
    "nIgnore=\"false\" mappingName=\"OPEN_TYPE\" mappingColumnType=\"System.String\" sqlTyp" +
    "e=\"varchar(50)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n  </Properties>\r\n</En" +
    "tityConfiguration>")]
    public partial class SYS_MENU : NBear.Common.Entity
    {

        protected static NBear.Common.EntityConfiguration _SYS_MENUEntityConfiguration;

        protected string _MENU_ID;

        protected string _PARENT_MENU_ID;

        protected string _MENU_CODE;

        protected string _MENU_NAME;

        protected string _MENU_ENAME;

        protected string _MENU_TYPE;

        protected string _MENU_URL;

        protected string _MENU_ICON_URL;

        protected int _MENU_ORDER;

        protected string _MENU_DESC;

        protected string _MENU_EDESC;

        protected int _STATUS;

        protected global::System.DateTime? _CREATED_TIME;

        protected string _OPEN_TYPE;

        public static @__Columns _ = new @__Columns();

        public static bool operator ==(global::SYSEntity.SYS_MENU left, global::SYSEntity.SYS_MENU right) { return ((object)left) != null ? left.Equals(right) : ((object)right) == null ? true : false; }


        public static bool operator !=(global::SYSEntity.SYS_MENU left, global::SYSEntity.SYS_MENU right) { return ((object)left) != null ? !left.Equals(right) : ((object)right) == null ? false : true; }



        public string MENU_ID
        {
            get
            {
                return this._MENU_ID;
            }
            set
            {
                this.OnPropertyChanged("MENU_ID", this._MENU_ID, value);
                this._MENU_ID = value;
            }
        }

        public string PARENT_MENU_ID
        {
            get
            {
                return this._PARENT_MENU_ID;
            }
            set
            {
                this.OnPropertyChanged("PARENT_MENU_ID", this._PARENT_MENU_ID, value);
                this._PARENT_MENU_ID = value;
            }
        }

        public string MENU_CODE
        {
            get
            {
                return this._MENU_CODE;
            }
            set
            {
                this.OnPropertyChanged("MENU_CODE", this._MENU_CODE, value);
                this._MENU_CODE = value;
            }
        }

        public string MENU_NAME
        {
            get
            {
                return this._MENU_NAME;
            }
            set
            {
                this.OnPropertyChanged("MENU_NAME", this._MENU_NAME, value);
                this._MENU_NAME = value;
            }
        }

        public string MENU_ENAME
        {
            get
            {
                return this._MENU_ENAME;
            }
            set
            {
                this.OnPropertyChanged("MENU_ENAME", this._MENU_ENAME, value);
                this._MENU_ENAME = value;
            }
        }

        public string MENU_TYPE
        {
            get
            {
                return this._MENU_TYPE;
            }
            set
            {
                this.OnPropertyChanged("MENU_TYPE", this._MENU_TYPE, value);
                this._MENU_TYPE = value;
            }
        }

        public string MENU_URL
        {
            get
            {
                return this._MENU_URL;
            }
            set
            {
                this.OnPropertyChanged("MENU_URL", this._MENU_URL, value);
                this._MENU_URL = value;
            }
        }

        public string MENU_ICON_URL
        {
            get
            {
                return this._MENU_ICON_URL;
            }
            set
            {
                this.OnPropertyChanged("MENU_ICON_URL", this._MENU_ICON_URL, value);
                this._MENU_ICON_URL = value;
            }
        }

        public int MENU_ORDER
        {
            get
            {
                return this._MENU_ORDER;
            }
            set
            {
                this.OnPropertyChanged("MENU_ORDER", this._MENU_ORDER, value);
                this._MENU_ORDER = value;
            }
        }

        public string MENU_DESC
        {
            get
            {
                return this._MENU_DESC;
            }
            set
            {
                this.OnPropertyChanged("MENU_DESC", this._MENU_DESC, value);
                this._MENU_DESC = value;
            }
        }

        public string MENU_EDESC
        {
            get
            {
                return this._MENU_EDESC;
            }
            set
            {
                this.OnPropertyChanged("MENU_EDESC", this._MENU_EDESC, value);
                this._MENU_EDESC = value;
            }
        }

        public int STATUS
        {
            get
            {
                return this._STATUS;
            }
            set
            {
                this.OnPropertyChanged("STATUS", this._STATUS, value);
                this._STATUS = value;
            }
        }

        public global::System.DateTime? CREATED_TIME
        {
            get
            {
                return this._CREATED_TIME;
            }
            set
            {
                this.OnPropertyChanged("CREATED_TIME", this._CREATED_TIME, value);
                this._CREATED_TIME = value;
            }
        }

        public string OPEN_TYPE
        {
            get
            {
                return this._OPEN_TYPE;
            }
            set
            {
                this.OnPropertyChanged("OPEN_TYPE", this._OPEN_TYPE, value);
                this._OPEN_TYPE = value;
            }
        }

        public override NBear.Common.EntityConfiguration GetEntityConfiguration()
        {
            if ((SYS_MENU._SYS_MENUEntityConfiguration == null))
            {
                SYS_MENU._SYS_MENUEntityConfiguration = NBear.Common.MetaDataManager.GetEntityConfiguration("SYSEntity.SYS_MENU");
            }
            return SYS_MENU._SYS_MENUEntityConfiguration;
        }

        public override void ReloadQueries(bool includeLazyLoadQueries)
        {
        }

        public override object[] GetPropertyValues()
        {
            return new object[] {
                        this._MENU_ID,
                        this._PARENT_MENU_ID,
                        this._MENU_CODE,
                        this._MENU_NAME,
                        this._MENU_ENAME,
                        this._MENU_TYPE,
                        this._MENU_URL,
                        this._MENU_ICON_URL,
                        this._MENU_ORDER,
                        this._MENU_DESC,
                        this._MENU_EDESC,
                        this._STATUS,
                        this._CREATED_TIME,
                        this._OPEN_TYPE};
        }

        public override void SetPropertyValues(System.Data.IDataReader reader)
        {
            if ((false == reader.IsDBNull(0)))
            {
                this._MENU_ID = reader.GetString(0);
            }
            if ((false == reader.IsDBNull(1)))
            {
                this._PARENT_MENU_ID = reader.GetString(1);
            }
            if ((false == reader.IsDBNull(2)))
            {
                this._MENU_CODE = reader.GetString(2);
            }
            if ((false == reader.IsDBNull(3)))
            {
                this._MENU_NAME = reader.GetString(3);
            }
            if ((false == reader.IsDBNull(4)))
            {
                this._MENU_ENAME = reader.GetString(4);
            }
            if ((false == reader.IsDBNull(5)))
            {
                this._MENU_TYPE = reader.GetString(5);
            }
            if ((false == reader.IsDBNull(6)))
            {
                this._MENU_URL = reader.GetString(6);
            }
            if ((false == reader.IsDBNull(7)))
            {
                this._MENU_ICON_URL = reader.GetString(7);
            }
            if ((false == reader.IsDBNull(8)))
            {
                this._MENU_ORDER = reader.GetInt32(8);
            }
            if ((false == reader.IsDBNull(9)))
            {
                this._MENU_DESC = reader.GetString(9);
            }
            if ((false == reader.IsDBNull(10)))
            {
                this._MENU_EDESC = reader.GetString(10);
            }
            if ((false == reader.IsDBNull(11)))
            {
                this._STATUS = reader.GetInt32(11);
            }
            if ((false == reader.IsDBNull(12)))
            {
                this._CREATED_TIME = this.GetDateTime(reader, 12);
            }
            if ((false == reader.IsDBNull(13)))
            {
                this._OPEN_TYPE = reader.GetString(13);
            }
            this.ReloadQueries(false);
        }

        public override void SetPropertyValues(System.Data.DataRow row)
        {
            if ((false == row.IsNull(0)))
            {
                this._MENU_ID = ((string)(row[0]));
            }
            if ((false == row.IsNull(1)))
            {
                this._PARENT_MENU_ID = ((string)(row[1]));
            }
            if ((false == row.IsNull(2)))
            {
                this._MENU_CODE = ((string)(row[2]));
            }
            if ((false == row.IsNull(3)))
            {
                this._MENU_NAME = ((string)(row[3]));
            }
            if ((false == row.IsNull(4)))
            {
                this._MENU_ENAME = ((string)(row[4]));
            }
            if ((false == row.IsNull(5)))
            {
                this._MENU_TYPE = ((string)(row[5]));
            }
            if ((false == row.IsNull(6)))
            {
                this._MENU_URL = ((string)(row[6]));
            }
            if ((false == row.IsNull(7)))
            {
                this._MENU_ICON_URL = ((string)(row[7]));
            }
            if ((false == row.IsNull(8)))
            {
                this._MENU_ORDER = ((int)(row[8]));
            }
            if ((false == row.IsNull(9)))
            {
                this._MENU_DESC = ((string)(row[9]));
            }
            if ((false == row.IsNull(10)))
            {
                this._MENU_EDESC = ((string)(row[10]));
            }
            if ((false == row.IsNull(11)))
            {
                this._STATUS = ((int)(row[11]));
            }
            if ((false == row.IsNull(12)))
            {
                this._CREATED_TIME = this.GetDateTime(row, 12);
            }
            if ((false == row.IsNull(13)))
            {
                this._OPEN_TYPE = ((string)(row[13]));
            }
            this.ReloadQueries(false);
        }

        public override int GetHashCode()
        {
            return base.GetHashCode();
        }

        public override bool Equals(object obj)
        {
            if ((obj == null))
            {
                return false;
            }
            if ((false == typeof(global::SYSEntity.SYS_MENU).IsAssignableFrom(obj.GetType())))
            {
                return false;
            }
            if ((((object)(this)) == ((object)(obj))))
            {
                return true;
            }
            return ((this.isAttached && ((global::SYSEntity.SYS_MENU)(obj)).isAttached)
                        && (this.MENU_ID == ((global::SYSEntity.SYS_MENU)(obj)).MENU_ID));
        }

        public static @__Columns @__Alias(string aliasName)
        {
            return new @__Columns(aliasName);
        }

        public class @__Columns
        {

            protected string aliasName;

            protected NBear.Common.PropertyItem _MENU_ID = new NBear.Common.PropertyItem("MENU_ID", "SYSEntity.SYS_MENU");

            protected NBear.Common.PropertyItem _PARENT_MENU_ID = new NBear.Common.PropertyItem("PARENT_MENU_ID", "SYSEntity.SYS_MENU");

            protected NBear.Common.PropertyItem _MENU_CODE = new NBear.Common.PropertyItem("MENU_CODE", "SYSEntity.SYS_MENU");

            protected NBear.Common.PropertyItem _MENU_NAME = new NBear.Common.PropertyItem("MENU_NAME", "SYSEntity.SYS_MENU");

            protected NBear.Common.PropertyItem _MENU_ENAME = new NBear.Common.PropertyItem("MENU_ENAME", "SYSEntity.SYS_MENU");

            protected NBear.Common.PropertyItem _MENU_TYPE = new NBear.Common.PropertyItem("MENU_TYPE", "SYSEntity.SYS_MENU");

            protected NBear.Common.PropertyItem _MENU_URL = new NBear.Common.PropertyItem("MENU_URL", "SYSEntity.SYS_MENU");

            protected NBear.Common.PropertyItem _MENU_ICON_URL = new NBear.Common.PropertyItem("MENU_ICON_URL", "SYSEntity.SYS_MENU");

            protected NBear.Common.PropertyItem _MENU_ORDER = new NBear.Common.PropertyItem("MENU_ORDER", "SYSEntity.SYS_MENU");

            protected NBear.Common.PropertyItem _MENU_DESC = new NBear.Common.PropertyItem("MENU_DESC", "SYSEntity.SYS_MENU");

            protected NBear.Common.PropertyItem _MENU_EDESC = new NBear.Common.PropertyItem("MENU_EDESC", "SYSEntity.SYS_MENU");

            protected NBear.Common.PropertyItem _STATUS = new NBear.Common.PropertyItem("STATUS", "SYSEntity.SYS_MENU");

            protected NBear.Common.PropertyItem _CREATED_TIME = new NBear.Common.PropertyItem("CREATED_TIME", "SYSEntity.SYS_MENU");

            protected NBear.Common.PropertyItem _OPEN_TYPE = new NBear.Common.PropertyItem("OPEN_TYPE", "SYSEntity.SYS_MENU");

            public @__Columns()
            {
            }

            public @__Columns(string aliasName)
            {
                this.aliasName = aliasName;
            }

            public NBear.Common.PropertyItem MENU_ID
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _MENU_ID;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("MENU_ID", _MENU_ID.EntityConfiguration, _MENU_ID.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem PARENT_MENU_ID
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _PARENT_MENU_ID;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("PARENT_MENU_ID", _PARENT_MENU_ID.EntityConfiguration, _PARENT_MENU_ID.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem MENU_CODE
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _MENU_CODE;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("MENU_CODE", _MENU_CODE.EntityConfiguration, _MENU_CODE.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem MENU_NAME
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _MENU_NAME;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("MENU_NAME", _MENU_NAME.EntityConfiguration, _MENU_NAME.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem MENU_ENAME
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _MENU_ENAME;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("MENU_ENAME", _MENU_ENAME.EntityConfiguration, _MENU_ENAME.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem MENU_TYPE
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _MENU_TYPE;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("MENU_TYPE", _MENU_TYPE.EntityConfiguration, _MENU_TYPE.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem MENU_URL
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _MENU_URL;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("MENU_URL", _MENU_URL.EntityConfiguration, _MENU_URL.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem MENU_ICON_URL
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _MENU_ICON_URL;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("MENU_ICON_URL", _MENU_ICON_URL.EntityConfiguration, _MENU_ICON_URL.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem MENU_ORDER
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _MENU_ORDER;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("MENU_ORDER", _MENU_ORDER.EntityConfiguration, _MENU_ORDER.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem MENU_DESC
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _MENU_DESC;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("MENU_DESC", _MENU_DESC.EntityConfiguration, _MENU_DESC.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem MENU_EDESC
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _MENU_EDESC;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("MENU_EDESC", _MENU_EDESC.EntityConfiguration, _MENU_EDESC.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem STATUS
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _STATUS;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("STATUS", _STATUS.EntityConfiguration, _STATUS.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem CREATED_TIME
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _CREATED_TIME;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("CREATED_TIME", _CREATED_TIME.EntityConfiguration, _CREATED_TIME.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem OPEN_TYPE
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _OPEN_TYPE;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("OPEN_TYPE", _OPEN_TYPE.EntityConfiguration, _OPEN_TYPE.PropertyConfiguration, aliasName);
                    }
                }
            }
        }
    }
}
namespace SYSEntity
{
    using System;
    using System.Xml.Serialization;
    using NBear.Common;


    [System.SerializableAttribute()]
    public partial class SYS_ROLEArrayList : NBear.Common.EntityArrayList<SYSEntity.SYS_ROLE>
    {
    }

    [System.SerializableAttribute()]
    [NBear.Common.EmbeddedEntityConfigurationAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<EntityConfiguration xmlns:xsd=\"http://w" +
    "ww.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" " +
    "name=\"SYSEntity.SYS_ROLE\" isReadOnly=\"false\" isAutoPreLoad=\"false\" isBatchUpdate" +
    "=\"false\" isRelation=\"false\" mappingName=\"SYS_ROLE\" batchSize=\"10\">\r\n  <Propertie" +
    "s>\r\n    <Property name=\"ROLE_ID\" type=\"System.String\" isInherited=\"false\" isRead" +
    "Only=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriend" +
    "Key=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isI" +
    "ndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"ROLE_ID\" map" +
    "pingColumnType=\"System.String\" sqlType=\"varchar(36)\" isPrimaryKey=\"true\" isNotNu" +
    "ll=\"true\" />\r\n    <Property name=\"ROLE_NAME\" type=\"System.String\" isInherited=\"f" +
    "alse\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"fal" +
    "se\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty" +
    "=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"" +
    "ROLE_NAME\" mappingColumnType=\"System.String\" sqlType=\"varchar(100)\" isPrimaryKey" +
    "=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"ROLE_DESC\" type=\"System.Strin" +
    "g\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"fa" +
    "lse\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false" +
    "\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"fal" +
    "se\" mappingName=\"ROLE_DESC\" mappingColumnType=\"System.String\" sqlType=\"varchar(2" +
    "00)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"CREATED_TIME" +
    "\" type=\"System.Nullable`1[System.DateTime]\" isInherited=\"false\" sqlDefaultValue=" +
    "\"getdate()\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuer" +
    "y=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexPr" +
    "operty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mapping" +
    "Name=\"CREATED_TIME\" mappingColumnType=\"System.Nullable`1[System.DateTime]\" sqlTy" +
    "pe=\"datetime\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"COM" +
    "PANY_ID\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundU" +
    "nit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"" +
    "false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\"" +
    " isSerializationIgnore=\"false\" mappingName=\"COMPANY_ID\" mappingColumnType=\"Syste" +
    "m.String\" sqlType=\"varchar(36)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <" +
    "Property name=\"ROLE_TYPE\" type=\"System.Nullable`1[System.Int32]\" isInherited=\"fa" +
    "lse\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"fals" +
    "e\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=" +
    "\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"R" +
    "OLE_TYPE\" mappingColumnType=\"System.Nullable`1[System.Int32]\" sqlType=\"int\" isPr" +
    "imaryKey=\"false\" isNotNull=\"false\" />\r\n  </Properties>\r\n</EntityConfiguration>")]
    public partial class SYS_ROLE : NBear.Common.Entity
    {

        protected static NBear.Common.EntityConfiguration _SYS_ROLEEntityConfiguration;

        protected string _ROLE_ID;

        protected string _ROLE_NAME;

        protected string _ROLE_DESC;

        protected global::System.DateTime? _CREATED_TIME;

        protected string _COMPANY_ID;

        protected global::System.Int32? _ROLE_TYPE;

        public static @__Columns _ = new @__Columns();

        public static bool operator ==(global::SYSEntity.SYS_ROLE left, global::SYSEntity.SYS_ROLE right) { return ((object)left) != null ? left.Equals(right) : ((object)right) == null ? true : false; }


        public static bool operator !=(global::SYSEntity.SYS_ROLE left, global::SYSEntity.SYS_ROLE right) { return ((object)left) != null ? !left.Equals(right) : ((object)right) == null ? false : true; }



        public string ROLE_ID
        {
            get
            {
                return this._ROLE_ID;
            }
            set
            {
                this.OnPropertyChanged("ROLE_ID", this._ROLE_ID, value);
                this._ROLE_ID = value;
            }
        }

        public string ROLE_NAME
        {
            get
            {
                return this._ROLE_NAME;
            }
            set
            {
                this.OnPropertyChanged("ROLE_NAME", this._ROLE_NAME, value);
                this._ROLE_NAME = value;
            }
        }

        public string ROLE_DESC
        {
            get
            {
                return this._ROLE_DESC;
            }
            set
            {
                this.OnPropertyChanged("ROLE_DESC", this._ROLE_DESC, value);
                this._ROLE_DESC = value;
            }
        }

        public global::System.DateTime? CREATED_TIME
        {
            get
            {
                return this._CREATED_TIME;
            }
            set
            {
                this.OnPropertyChanged("CREATED_TIME", this._CREATED_TIME, value);
                this._CREATED_TIME = value;
            }
        }

        public string COMPANY_ID
        {
            get
            {
                return this._COMPANY_ID;
            }
            set
            {
                this.OnPropertyChanged("COMPANY_ID", this._COMPANY_ID, value);
                this._COMPANY_ID = value;
            }
        }

        public global::System.Int32? ROLE_TYPE
        {
            get
            {
                return this._ROLE_TYPE;
            }
            set
            {
                this.OnPropertyChanged("ROLE_TYPE", this._ROLE_TYPE, value);
                this._ROLE_TYPE = value;
            }
        }

        public override NBear.Common.EntityConfiguration GetEntityConfiguration()
        {
            if ((SYS_ROLE._SYS_ROLEEntityConfiguration == null))
            {
                SYS_ROLE._SYS_ROLEEntityConfiguration = NBear.Common.MetaDataManager.GetEntityConfiguration("SYSEntity.SYS_ROLE");
            }
            return SYS_ROLE._SYS_ROLEEntityConfiguration;
        }

        public override void ReloadQueries(bool includeLazyLoadQueries)
        {
        }

        public override object[] GetPropertyValues()
        {
            return new object[] {
                        this._ROLE_ID,
                        this._ROLE_NAME,
                        this._ROLE_DESC,
                        this._CREATED_TIME,
                        this._COMPANY_ID,
                        this._ROLE_TYPE};
        }

        public override void SetPropertyValues(System.Data.IDataReader reader)
        {
            if ((false == reader.IsDBNull(0)))
            {
                this._ROLE_ID = reader.GetString(0);
            }
            if ((false == reader.IsDBNull(1)))
            {
                this._ROLE_NAME = reader.GetString(1);
            }
            if ((false == reader.IsDBNull(2)))
            {
                this._ROLE_DESC = reader.GetString(2);
            }
            if ((false == reader.IsDBNull(3)))
            {
                this._CREATED_TIME = this.GetDateTime(reader, 3);
            }
            if ((false == reader.IsDBNull(4)))
            {
                this._COMPANY_ID = reader.GetString(4);
            }
            if ((false == reader.IsDBNull(5)))
            {
                this._ROLE_TYPE = reader.GetInt32(5);
            }
            this.ReloadQueries(false);
        }

        public override void SetPropertyValues(System.Data.DataRow row)
        {
            if ((false == row.IsNull(0)))
            {
                this._ROLE_ID = ((string)(row[0]));
            }
            if ((false == row.IsNull(1)))
            {
                this._ROLE_NAME = ((string)(row[1]));
            }
            if ((false == row.IsNull(2)))
            {
                this._ROLE_DESC = ((string)(row[2]));
            }
            if ((false == row.IsNull(3)))
            {
                this._CREATED_TIME = this.GetDateTime(row, 3);
            }
            if ((false == row.IsNull(4)))
            {
                this._COMPANY_ID = ((string)(row[4]));
            }
            if ((false == row.IsNull(5)))
            {
                this._ROLE_TYPE = ((System.Nullable<int>)(row[5]));
            }
            this.ReloadQueries(false);
        }

        public override int GetHashCode()
        {
            return base.GetHashCode();
        }

        public override bool Equals(object obj)
        {
            if ((obj == null))
            {
                return false;
            }
            if ((false == typeof(global::SYSEntity.SYS_ROLE).IsAssignableFrom(obj.GetType())))
            {
                return false;
            }
            if ((((object)(this)) == ((object)(obj))))
            {
                return true;
            }
            return ((this.isAttached && ((global::SYSEntity.SYS_ROLE)(obj)).isAttached)
                        && (this.ROLE_ID == ((global::SYSEntity.SYS_ROLE)(obj)).ROLE_ID));
        }

        public static @__Columns @__Alias(string aliasName)
        {
            return new @__Columns(aliasName);
        }

        public class @__Columns
        {

            protected string aliasName;

            protected NBear.Common.PropertyItem _ROLE_ID = new NBear.Common.PropertyItem("ROLE_ID", "SYSEntity.SYS_ROLE");

            protected NBear.Common.PropertyItem _ROLE_NAME = new NBear.Common.PropertyItem("ROLE_NAME", "SYSEntity.SYS_ROLE");

            protected NBear.Common.PropertyItem _ROLE_DESC = new NBear.Common.PropertyItem("ROLE_DESC", "SYSEntity.SYS_ROLE");

            protected NBear.Common.PropertyItem _CREATED_TIME = new NBear.Common.PropertyItem("CREATED_TIME", "SYSEntity.SYS_ROLE");

            protected NBear.Common.PropertyItem _COMPANY_ID = new NBear.Common.PropertyItem("COMPANY_ID", "SYSEntity.SYS_ROLE");

            protected NBear.Common.PropertyItem _ROLE_TYPE = new NBear.Common.PropertyItem("ROLE_TYPE", "SYSEntity.SYS_ROLE");

            public @__Columns()
            {
            }

            public @__Columns(string aliasName)
            {
                this.aliasName = aliasName;
            }

            public NBear.Common.PropertyItem ROLE_ID
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _ROLE_ID;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("ROLE_ID", _ROLE_ID.EntityConfiguration, _ROLE_ID.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem ROLE_NAME
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _ROLE_NAME;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("ROLE_NAME", _ROLE_NAME.EntityConfiguration, _ROLE_NAME.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem ROLE_DESC
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _ROLE_DESC;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("ROLE_DESC", _ROLE_DESC.EntityConfiguration, _ROLE_DESC.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem CREATED_TIME
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _CREATED_TIME;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("CREATED_TIME", _CREATED_TIME.EntityConfiguration, _CREATED_TIME.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem COMPANY_ID
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _COMPANY_ID;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("COMPANY_ID", _COMPANY_ID.EntityConfiguration, _COMPANY_ID.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem ROLE_TYPE
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _ROLE_TYPE;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("ROLE_TYPE", _ROLE_TYPE.EntityConfiguration, _ROLE_TYPE.PropertyConfiguration, aliasName);
                    }
                }
            }
        }
    }
}
namespace SYSEntity
{
    using System;
    using System.Xml.Serialization;
    using NBear.Common;


    [System.SerializableAttribute()]
    public partial class SYS_ROLE_PRIVArrayList : NBear.Common.EntityArrayList<SYSEntity.SYS_ROLE_PRIV>
    {
    }

    [System.SerializableAttribute()]
    [NBear.Common.EmbeddedEntityConfigurationAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<EntityConfiguration xmlns:xsd=\"http://w" +
    "ww.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" " +
    "name=\"SYSEntity.SYS_ROLE_PRIV\" isReadOnly=\"false\" isAutoPreLoad=\"false\" isBatchU" +
    "pdate=\"false\" isRelation=\"false\" mappingName=\"SYS_ROLE_PRIV\" batchSize=\"10\">\r\n  " +
    "<Properties>\r\n    <Property name=\"TABLE_ID\" type=\"System.String\" isInherited=\"fa" +
    "lse\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"fals" +
    "e\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=" +
    "\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"T" +
    "ABLE_ID\" mappingColumnType=\"System.String\" sqlType=\"varchar(36)\" isPrimaryKey=\"t" +
    "rue\" isNotNull=\"true\" />\r\n    <Property name=\"ROLE_ID\" type=\"System.String\" isIn" +
    "herited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" is" +
    "Query=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isInd" +
    "exProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" map" +
    "pingName=\"ROLE_ID\" mappingColumnType=\"System.String\" sqlType=\"varchar(36)\" isPri" +
    "maryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"MENU_ID\" type=\"System." +
    "String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContaine" +
    "d=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"" +
    "false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore" +
    "=\"false\" mappingName=\"MENU_ID\" mappingColumnType=\"System.String\" sqlType=\"varcha" +
    "r(36)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"CREATED_TI" +
    "ME\" type=\"System.Nullable`1[System.DateTime]\" isInherited=\"false\" sqlDefaultValu" +
    "e=\"getdate()\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQu" +
    "ery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndex" +
    "Property=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappi" +
    "ngName=\"CREATED_TIME\" mappingColumnType=\"System.Nullable`1[System.DateTime]\" sql" +
    "Type=\"datetime\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n  </Properties>\r\n</En" +
    "tityConfiguration>")]
    public partial class SYS_ROLE_PRIV : NBear.Common.Entity
    {

        protected static NBear.Common.EntityConfiguration _SYS_ROLE_PRIVEntityConfiguration;

        protected string _TABLE_ID;

        protected string _ROLE_ID;

        protected string _MENU_ID;

        protected global::System.DateTime? _CREATED_TIME;

        public static @__Columns _ = new @__Columns();

        public static bool operator ==(global::SYSEntity.SYS_ROLE_PRIV left, global::SYSEntity.SYS_ROLE_PRIV right) { return ((object)left) != null ? left.Equals(right) : ((object)right) == null ? true : false; }


        public static bool operator !=(global::SYSEntity.SYS_ROLE_PRIV left, global::SYSEntity.SYS_ROLE_PRIV right) { return ((object)left) != null ? !left.Equals(right) : ((object)right) == null ? false : true; }



        public string TABLE_ID
        {
            get
            {
                return this._TABLE_ID;
            }
            set
            {
                this.OnPropertyChanged("TABLE_ID", this._TABLE_ID, value);
                this._TABLE_ID = value;
            }
        }

        public string ROLE_ID
        {
            get
            {
                return this._ROLE_ID;
            }
            set
            {
                this.OnPropertyChanged("ROLE_ID", this._ROLE_ID, value);
                this._ROLE_ID = value;
            }
        }

        public string MENU_ID
        {
            get
            {
                return this._MENU_ID;
            }
            set
            {
                this.OnPropertyChanged("MENU_ID", this._MENU_ID, value);
                this._MENU_ID = value;
            }
        }

        public global::System.DateTime? CREATED_TIME
        {
            get
            {
                return this._CREATED_TIME;
            }
            set
            {
                this.OnPropertyChanged("CREATED_TIME", this._CREATED_TIME, value);
                this._CREATED_TIME = value;
            }
        }

        public override NBear.Common.EntityConfiguration GetEntityConfiguration()
        {
            if ((SYS_ROLE_PRIV._SYS_ROLE_PRIVEntityConfiguration == null))
            {
                SYS_ROLE_PRIV._SYS_ROLE_PRIVEntityConfiguration = NBear.Common.MetaDataManager.GetEntityConfiguration("SYSEntity.SYS_ROLE_PRIV");
            }
            return SYS_ROLE_PRIV._SYS_ROLE_PRIVEntityConfiguration;
        }

        public override void ReloadQueries(bool includeLazyLoadQueries)
        {
        }

        public override object[] GetPropertyValues()
        {
            return new object[] {
                        this._TABLE_ID,
                        this._ROLE_ID,
                        this._MENU_ID,
                        this._CREATED_TIME};
        }

        public override void SetPropertyValues(System.Data.IDataReader reader)
        {
            if ((false == reader.IsDBNull(0)))
            {
                this._TABLE_ID = reader.GetString(0);
            }
            if ((false == reader.IsDBNull(1)))
            {
                this._ROLE_ID = reader.GetString(1);
            }
            if ((false == reader.IsDBNull(2)))
            {
                this._MENU_ID = reader.GetString(2);
            }
            if ((false == reader.IsDBNull(3)))
            {
                this._CREATED_TIME = this.GetDateTime(reader, 3);
            }
            this.ReloadQueries(false);
        }

        public override void SetPropertyValues(System.Data.DataRow row)
        {
            if ((false == row.IsNull(0)))
            {
                this._TABLE_ID = ((string)(row[0]));
            }
            if ((false == row.IsNull(1)))
            {
                this._ROLE_ID = ((string)(row[1]));
            }
            if ((false == row.IsNull(2)))
            {
                this._MENU_ID = ((string)(row[2]));
            }
            if ((false == row.IsNull(3)))
            {
                this._CREATED_TIME = this.GetDateTime(row, 3);
            }
            this.ReloadQueries(false);
        }

        public override int GetHashCode()
        {
            return base.GetHashCode();
        }

        public override bool Equals(object obj)
        {
            if ((obj == null))
            {
                return false;
            }
            if ((false == typeof(global::SYSEntity.SYS_ROLE_PRIV).IsAssignableFrom(obj.GetType())))
            {
                return false;
            }
            if ((((object)(this)) == ((object)(obj))))
            {
                return true;
            }
            return ((this.isAttached && ((global::SYSEntity.SYS_ROLE_PRIV)(obj)).isAttached)
                        && (this.TABLE_ID == ((global::SYSEntity.SYS_ROLE_PRIV)(obj)).TABLE_ID));
        }

        public static @__Columns @__Alias(string aliasName)
        {
            return new @__Columns(aliasName);
        }

        public class @__Columns
        {

            protected string aliasName;

            protected NBear.Common.PropertyItem _TABLE_ID = new NBear.Common.PropertyItem("TABLE_ID", "SYSEntity.SYS_ROLE_PRIV");

            protected NBear.Common.PropertyItem _ROLE_ID = new NBear.Common.PropertyItem("ROLE_ID", "SYSEntity.SYS_ROLE_PRIV");

            protected NBear.Common.PropertyItem _MENU_ID = new NBear.Common.PropertyItem("MENU_ID", "SYSEntity.SYS_ROLE_PRIV");

            protected NBear.Common.PropertyItem _CREATED_TIME = new NBear.Common.PropertyItem("CREATED_TIME", "SYSEntity.SYS_ROLE_PRIV");

            public @__Columns()
            {
            }

            public @__Columns(string aliasName)
            {
                this.aliasName = aliasName;
            }

            public NBear.Common.PropertyItem TABLE_ID
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _TABLE_ID;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("TABLE_ID", _TABLE_ID.EntityConfiguration, _TABLE_ID.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem ROLE_ID
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _ROLE_ID;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("ROLE_ID", _ROLE_ID.EntityConfiguration, _ROLE_ID.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem MENU_ID
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _MENU_ID;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("MENU_ID", _MENU_ID.EntityConfiguration, _MENU_ID.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem CREATED_TIME
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _CREATED_TIME;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("CREATED_TIME", _CREATED_TIME.EntityConfiguration, _CREATED_TIME.PropertyConfiguration, aliasName);
                    }
                }
            }
        }
    }
}
namespace SYSEntity
{
    using System;
    using System.Xml.Serialization;
    using NBear.Common;


    [System.SerializableAttribute()]
    public partial class SYS_ROLE_USERArrayList : NBear.Common.EntityArrayList<SYSEntity.SYS_ROLE_USER>
    {
    }

    [System.SerializableAttribute()]
    [NBear.Common.EmbeddedEntityConfigurationAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<EntityConfiguration xmlns:xsd=\"http://w" +
    "ww.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" " +
    "name=\"SYSEntity.SYS_ROLE_USER\" isReadOnly=\"false\" isAutoPreLoad=\"false\" isBatchU" +
    "pdate=\"false\" isRelation=\"false\" mappingName=\"SYS_ROLE_USER\" batchSize=\"10\">\r\n  " +
    "<Properties>\r\n    <Property name=\"TABLE_ID\" type=\"System.String\" isInherited=\"fa" +
    "lse\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"fals" +
    "e\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=" +
    "\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"T" +
    "ABLE_ID\" mappingColumnType=\"System.String\" sqlType=\"varchar(36)\" isPrimaryKey=\"t" +
    "rue\" isNotNull=\"true\" />\r\n    <Property name=\"ROLE_ID\" type=\"System.String\" isIn" +
    "herited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" is" +
    "Query=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isInd" +
    "exProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" map" +
    "pingName=\"ROLE_ID\" mappingColumnType=\"System.String\" sqlType=\"varchar(36)\" isPri" +
    "maryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"USER_ID\" type=\"System." +
    "String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContaine" +
    "d=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"" +
    "false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore" +
    "=\"false\" mappingName=\"USER_ID\" mappingColumnType=\"System.String\" sqlType=\"varcha" +
    "r(36)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"CREATED_TI" +
    "ME\" type=\"System.Nullable`1[System.DateTime]\" isInherited=\"false\" sqlDefaultValu" +
    "e=\"getdate()\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQu" +
    "ery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndex" +
    "Property=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappi" +
    "ngName=\"CREATED_TIME\" mappingColumnType=\"System.Nullable`1[System.DateTime]\" sql" +
    "Type=\"datetime\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n  </Properties>\r\n</En" +
    "tityConfiguration>")]
    public partial class SYS_ROLE_USER : NBear.Common.Entity
    {

        protected static NBear.Common.EntityConfiguration _SYS_ROLE_USEREntityConfiguration;

        protected string _TABLE_ID;

        protected string _ROLE_ID;

        protected string _USER_ID;

        protected global::System.DateTime? _CREATED_TIME;

        public static @__Columns _ = new @__Columns();

        public static bool operator ==(global::SYSEntity.SYS_ROLE_USER left, global::SYSEntity.SYS_ROLE_USER right) { return ((object)left) != null ? left.Equals(right) : ((object)right) == null ? true : false; }


        public static bool operator !=(global::SYSEntity.SYS_ROLE_USER left, global::SYSEntity.SYS_ROLE_USER right) { return ((object)left) != null ? !left.Equals(right) : ((object)right) == null ? false : true; }



        public string TABLE_ID
        {
            get
            {
                return this._TABLE_ID;
            }
            set
            {
                this.OnPropertyChanged("TABLE_ID", this._TABLE_ID, value);
                this._TABLE_ID = value;
            }
        }

        public string ROLE_ID
        {
            get
            {
                return this._ROLE_ID;
            }
            set
            {
                this.OnPropertyChanged("ROLE_ID", this._ROLE_ID, value);
                this._ROLE_ID = value;
            }
        }

        public string USER_ID
        {
            get
            {
                return this._USER_ID;
            }
            set
            {
                this.OnPropertyChanged("USER_ID", this._USER_ID, value);
                this._USER_ID = value;
            }
        }

        public global::System.DateTime? CREATED_TIME
        {
            get
            {
                return this._CREATED_TIME;
            }
            set
            {
                this.OnPropertyChanged("CREATED_TIME", this._CREATED_TIME, value);
                this._CREATED_TIME = value;
            }
        }

        public override NBear.Common.EntityConfiguration GetEntityConfiguration()
        {
            if ((SYS_ROLE_USER._SYS_ROLE_USEREntityConfiguration == null))
            {
                SYS_ROLE_USER._SYS_ROLE_USEREntityConfiguration = NBear.Common.MetaDataManager.GetEntityConfiguration("SYSEntity.SYS_ROLE_USER");
            }
            return SYS_ROLE_USER._SYS_ROLE_USEREntityConfiguration;
        }

        public override void ReloadQueries(bool includeLazyLoadQueries)
        {
        }

        public override object[] GetPropertyValues()
        {
            return new object[] {
                        this._TABLE_ID,
                        this._ROLE_ID,
                        this._USER_ID,
                        this._CREATED_TIME};
        }

        public override void SetPropertyValues(System.Data.IDataReader reader)
        {
            if ((false == reader.IsDBNull(0)))
            {
                this._TABLE_ID = reader.GetString(0);
            }
            if ((false == reader.IsDBNull(1)))
            {
                this._ROLE_ID = reader.GetString(1);
            }
            if ((false == reader.IsDBNull(2)))
            {
                this._USER_ID = reader.GetString(2);
            }
            if ((false == reader.IsDBNull(3)))
            {
                this._CREATED_TIME = this.GetDateTime(reader, 3);
            }
            this.ReloadQueries(false);
        }

        public override void SetPropertyValues(System.Data.DataRow row)
        {
            if ((false == row.IsNull(0)))
            {
                this._TABLE_ID = ((string)(row[0]));
            }
            if ((false == row.IsNull(1)))
            {
                this._ROLE_ID = ((string)(row[1]));
            }
            if ((false == row.IsNull(2)))
            {
                this._USER_ID = ((string)(row[2]));
            }
            if ((false == row.IsNull(3)))
            {
                this._CREATED_TIME = this.GetDateTime(row, 3);
            }
            this.ReloadQueries(false);
        }

        public override int GetHashCode()
        {
            return base.GetHashCode();
        }

        public override bool Equals(object obj)
        {
            if ((obj == null))
            {
                return false;
            }
            if ((false == typeof(global::SYSEntity.SYS_ROLE_USER).IsAssignableFrom(obj.GetType())))
            {
                return false;
            }
            if ((((object)(this)) == ((object)(obj))))
            {
                return true;
            }
            return ((this.isAttached && ((global::SYSEntity.SYS_ROLE_USER)(obj)).isAttached)
                        && (this.TABLE_ID == ((global::SYSEntity.SYS_ROLE_USER)(obj)).TABLE_ID));
        }

        public static @__Columns @__Alias(string aliasName)
        {
            return new @__Columns(aliasName);
        }

        public class @__Columns
        {

            protected string aliasName;

            protected NBear.Common.PropertyItem _TABLE_ID = new NBear.Common.PropertyItem("TABLE_ID", "SYSEntity.SYS_ROLE_USER");

            protected NBear.Common.PropertyItem _ROLE_ID = new NBear.Common.PropertyItem("ROLE_ID", "SYSEntity.SYS_ROLE_USER");

            protected NBear.Common.PropertyItem _USER_ID = new NBear.Common.PropertyItem("USER_ID", "SYSEntity.SYS_ROLE_USER");

            protected NBear.Common.PropertyItem _CREATED_TIME = new NBear.Common.PropertyItem("CREATED_TIME", "SYSEntity.SYS_ROLE_USER");

            public @__Columns()
            {
            }

            public @__Columns(string aliasName)
            {
                this.aliasName = aliasName;
            }

            public NBear.Common.PropertyItem TABLE_ID
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _TABLE_ID;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("TABLE_ID", _TABLE_ID.EntityConfiguration, _TABLE_ID.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem ROLE_ID
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _ROLE_ID;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("ROLE_ID", _ROLE_ID.EntityConfiguration, _ROLE_ID.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem USER_ID
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _USER_ID;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("USER_ID", _USER_ID.EntityConfiguration, _USER_ID.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem CREATED_TIME
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _CREATED_TIME;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("CREATED_TIME", _CREATED_TIME.EntityConfiguration, _CREATED_TIME.PropertyConfiguration, aliasName);
                    }
                }
            }
        }
    }
}
namespace SYSEntity
{
    using System;
    using System.Xml.Serialization;
    using NBear.Common;


    [System.SerializableAttribute()]
    public partial class SYS_USERArrayList : NBear.Common.EntityArrayList<SYSEntity.SYS_USER>
    {
    }

    [System.SerializableAttribute()]
    [NBear.Common.EmbeddedEntityConfigurationAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<EntityConfiguration xmlns:xsd=\"http://w" +
    "ww.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" " +
    "name=\"SYSEntity.SYS_USER\" isReadOnly=\"false\" isAutoPreLoad=\"false\" isBatchUpdate" +
    "=\"false\" isRelation=\"false\" mappingName=\"SYS_USER\" batchSize=\"10\">\r\n  <Propertie" +
    "s>\r\n    <Property name=\"USER_ID\" type=\"System.String\" isInherited=\"false\" isRead" +
    "Only=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriend" +
    "Key=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isI" +
    "ndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"USER_ID\" map" +
    "pingColumnType=\"System.String\" sqlType=\"varchar(36)\" isPrimaryKey=\"true\" isNotNu" +
    "ll=\"true\" />\r\n    <Property name=\"USER_NAME\" type=\"System.String\" isInherited=\"f" +
    "alse\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"fal" +
    "se\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty" +
    "=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"" +
    "USER_NAME\" mappingColumnType=\"System.String\" sqlType=\"varchar(100)\" isPrimaryKey" +
    "=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"USER_NICKNAME\" type=\"System.S" +
    "tring\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained" +
    "=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"f" +
    "alse\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=" +
    "\"false\" mappingName=\"USER_NICKNAME\" mappingColumnType=\"System.String\" sqlType=\"v" +
    "archar(100)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"PASS" +
    "WORD\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit" +
    "=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"fal" +
    "se\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" is" +
    "SerializationIgnore=\"false\" mappingName=\"PASSWORD\" mappingColumnType=\"System.Str" +
    "ing\" sqlType=\"varchar(100)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Prop" +
    "erty name=\"USER_TYPE\" type=\"System.Int32\" isInherited=\"false\" isReadOnly=\"false\"" +
    " isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" " +
    "isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexProperty" +
    "Desc=\"false\" isSerializationIgnore=\"false\" mappingName=\"USER_TYPE\" mappingColumn" +
    "Type=\"System.Int32\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n   " +
    " <Property name=\"USER_IMAGE\" type=\"System.String\" isInherited=\"false\" isReadOnly" +
    "=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=" +
    "\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndex" +
    "PropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"USER_IMAGE\" mapp" +
    "ingColumnType=\"System.String\" sqlType=\"varchar(200)\" isPrimaryKey=\"false\" isNotN" +
    "ull=\"false\" />\r\n    <Property name=\"ACTIVE_DATE\" type=\"System.DateTime\" isInheri" +
    "ted=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuer" +
    "y=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexPr" +
    "operty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mapping" +
    "Name=\"ACTIVE_DATE\" mappingColumnType=\"System.DateTime\" sqlType=\"datetime\" isPrim" +
    "aryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"DISABLE_DATE\" type=\"Sys" +
    "tem.DateTime\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isCo" +
    "ntained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelatio" +
    "nKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerialization" +
    "Ignore=\"false\" mappingName=\"DISABLE_DATE\" mappingColumnType=\"System.DateTime\" sq" +
    "lType=\"datetime\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"" +
    "STATUS\" type=\"System.Int32\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUni" +
    "t=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"fa" +
    "lse\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" i" +
    "sSerializationIgnore=\"false\" mappingName=\"STATUS\" mappingColumnType=\"System.Int3" +
    "2\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"" +
    "BUILT_IN\" type=\"System.Int32\" isInherited=\"false\" isReadOnly=\"false\" isCompoundU" +
    "nit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"" +
    "false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\"" +
    " isSerializationIgnore=\"false\" mappingName=\"BUILT_IN\" mappingColumnType=\"System." +
    "Int32\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property na" +
    "me=\"USER_DESC\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCom" +
    "poundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazy" +
    "Load=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"" +
    "false\" isSerializationIgnore=\"false\" mappingName=\"USER_DESC\" mappingColumnType=\"" +
    "System.String\" sqlType=\"varchar(500)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r" +
    "\n    <Property name=\"MOBILE\" type=\"System.String\" isInherited=\"false\" isReadOnly" +
    "=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=" +
    "\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndex" +
    "PropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"MOBILE\" mappingC" +
    "olumnType=\"System.String\" sqlType=\"varchar(50)\" isPrimaryKey=\"false\" isNotNull=\"" +
    "false\" />\r\n    <Property name=\"EMAIL\" type=\"System.String\" isInherited=\"false\" i" +
    "sReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isF" +
    "riendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false" +
    "\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"EMAIL\" " +
    "mappingColumnType=\"System.String\" sqlType=\"varchar(50)\" isPrimaryKey=\"false\" isN" +
    "otNull=\"false\" />\r\n    <Property name=\"CREATED_BY\" type=\"System.String\" isInheri" +
    "ted=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuer" +
    "y=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexPr" +
    "operty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mapping" +
    "Name=\"CREATED_BY\" mappingColumnType=\"System.String\" sqlType=\"varchar(36)\" isPrim" +
    "aryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"CREATED_TIME\" type=\"Sys" +
    "tem.Nullable`1[System.DateTime]\" isInherited=\"false\" sqlDefaultValue=\"getdate()\"" +
    " isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" i" +
    "sFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"fal" +
    "se\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"CREAT" +
    "ED_TIME\" mappingColumnType=\"System.Nullable`1[System.DateTime]\" sqlType=\"datetim" +
    "e\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"LAST_UPDATED_B" +
    "Y\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"f" +
    "alse\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\"" +
    " isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSer" +
    "ializationIgnore=\"false\" mappingName=\"LAST_UPDATED_BY\" mappingColumnType=\"System" +
    ".String\" sqlType=\"varchar(36)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <P" +
    "roperty name=\"LAST_UPDATED_TIME\" type=\"System.Nullable`1[System.DateTime]\" isInh" +
    "erited=\"false\" sqlDefaultValue=\"getdate()\" isReadOnly=\"false\" isCompoundUnit=\"fa" +
    "lse\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" " +
    "isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSeri" +
    "alizationIgnore=\"false\" mappingName=\"LAST_UPDATED_TIME\" mappingColumnType=\"Syste" +
    "m.Nullable`1[System.DateTime]\" sqlType=\"datetime\" isPrimaryKey=\"false\" isNotNull" +
    "=\"false\" />\r\n  </Properties>\r\n</EntityConfiguration>")]
    public partial class SYS_USER : NBear.Common.Entity
    {

        protected static NBear.Common.EntityConfiguration _SYS_USEREntityConfiguration;

        protected string _USER_ID;

        protected string _USER_NAME;

        protected string _USER_NICKNAME;

        protected string _PASSWORD;

        protected int _USER_TYPE;

        protected string _USER_IMAGE;

        protected global::System.DateTime _ACTIVE_DATE;

        protected global::System.DateTime _DISABLE_DATE;

        protected int _STATUS;

        protected int _BUILT_IN;

        protected string _USER_DESC;

        protected string _MOBILE;

        protected string _EMAIL;

        protected string _CREATED_BY;

        protected global::System.DateTime? _CREATED_TIME;

        protected string _LAST_UPDATED_BY;

        protected global::System.DateTime? _LAST_UPDATED_TIME;

        public static @__Columns _ = new @__Columns();

        public static bool operator ==(global::SYSEntity.SYS_USER left, global::SYSEntity.SYS_USER right) { return ((object)left) != null ? left.Equals(right) : ((object)right) == null ? true : false; }


        public static bool operator !=(global::SYSEntity.SYS_USER left, global::SYSEntity.SYS_USER right) { return ((object)left) != null ? !left.Equals(right) : ((object)right) == null ? false : true; }



        public string USER_ID
        {
            get
            {
                return this._USER_ID;
            }
            set
            {
                this.OnPropertyChanged("USER_ID", this._USER_ID, value);
                this._USER_ID = value;
            }
        }

        public string USER_NAME
        {
            get
            {
                return this._USER_NAME;
            }
            set
            {
                this.OnPropertyChanged("USER_NAME", this._USER_NAME, value);
                this._USER_NAME = value;
            }
        }

        public string USER_NICKNAME
        {
            get
            {
                return this._USER_NICKNAME;
            }
            set
            {
                this.OnPropertyChanged("USER_NICKNAME", this._USER_NICKNAME, value);
                this._USER_NICKNAME = value;
            }
        }

        public string PASSWORD
        {
            get
            {
                return this._PASSWORD;
            }
            set
            {
                this.OnPropertyChanged("PASSWORD", this._PASSWORD, value);
                this._PASSWORD = value;
            }
        }

        public int USER_TYPE
        {
            get
            {
                return this._USER_TYPE;
            }
            set
            {
                this.OnPropertyChanged("USER_TYPE", this._USER_TYPE, value);
                this._USER_TYPE = value;
            }
        }

        public string USER_IMAGE
        {
            get
            {
                return this._USER_IMAGE;
            }
            set
            {
                this.OnPropertyChanged("USER_IMAGE", this._USER_IMAGE, value);
                this._USER_IMAGE = value;
            }
        }

        public global::System.DateTime ACTIVE_DATE
        {
            get
            {
                return this._ACTIVE_DATE;
            }
            set
            {
                this.OnPropertyChanged("ACTIVE_DATE", this._ACTIVE_DATE, value);
                this._ACTIVE_DATE = value;
            }
        }

        public global::System.DateTime DISABLE_DATE
        {
            get
            {
                return this._DISABLE_DATE;
            }
            set
            {
                this.OnPropertyChanged("DISABLE_DATE", this._DISABLE_DATE, value);
                this._DISABLE_DATE = value;
            }
        }

        public int STATUS
        {
            get
            {
                return this._STATUS;
            }
            set
            {
                this.OnPropertyChanged("STATUS", this._STATUS, value);
                this._STATUS = value;
            }
        }

        public int BUILT_IN
        {
            get
            {
                return this._BUILT_IN;
            }
            set
            {
                this.OnPropertyChanged("BUILT_IN", this._BUILT_IN, value);
                this._BUILT_IN = value;
            }
        }

        public string USER_DESC
        {
            get
            {
                return this._USER_DESC;
            }
            set
            {
                this.OnPropertyChanged("USER_DESC", this._USER_DESC, value);
                this._USER_DESC = value;
            }
        }

        public string MOBILE
        {
            get
            {
                return this._MOBILE;
            }
            set
            {
                this.OnPropertyChanged("MOBILE", this._MOBILE, value);
                this._MOBILE = value;
            }
        }

        public string EMAIL
        {
            get
            {
                return this._EMAIL;
            }
            set
            {
                this.OnPropertyChanged("EMAIL", this._EMAIL, value);
                this._EMAIL = value;
            }
        }

        public string CREATED_BY
        {
            get
            {
                return this._CREATED_BY;
            }
            set
            {
                this.OnPropertyChanged("CREATED_BY", this._CREATED_BY, value);
                this._CREATED_BY = value;
            }
        }

        public global::System.DateTime? CREATED_TIME
        {
            get
            {
                return this._CREATED_TIME;
            }
            set
            {
                this.OnPropertyChanged("CREATED_TIME", this._CREATED_TIME, value);
                this._CREATED_TIME = value;
            }
        }

        public string LAST_UPDATED_BY
        {
            get
            {
                return this._LAST_UPDATED_BY;
            }
            set
            {
                this.OnPropertyChanged("LAST_UPDATED_BY", this._LAST_UPDATED_BY, value);
                this._LAST_UPDATED_BY = value;
            }
        }

        public global::System.DateTime? LAST_UPDATED_TIME
        {
            get
            {
                return this._LAST_UPDATED_TIME;
            }
            set
            {
                this.OnPropertyChanged("LAST_UPDATED_TIME", this._LAST_UPDATED_TIME, value);
                this._LAST_UPDATED_TIME = value;
            }
        }

        public override NBear.Common.EntityConfiguration GetEntityConfiguration()
        {
            if ((SYS_USER._SYS_USEREntityConfiguration == null))
            {
                SYS_USER._SYS_USEREntityConfiguration = NBear.Common.MetaDataManager.GetEntityConfiguration("SYSEntity.SYS_USER");
            }
            return SYS_USER._SYS_USEREntityConfiguration;
        }

        public override void ReloadQueries(bool includeLazyLoadQueries)
        {
        }

        public override object[] GetPropertyValues()
        {
            return new object[] {
                        this._USER_ID,
                        this._USER_NAME,
                        this._USER_NICKNAME,
                        this._PASSWORD,
                        this._USER_TYPE,
                        this._USER_IMAGE,
                        this._ACTIVE_DATE,
                        this._DISABLE_DATE,
                        this._STATUS,
                        this._BUILT_IN,
                        this._USER_DESC,
                        this._MOBILE,
                        this._EMAIL,
                        this._CREATED_BY,
                        this._CREATED_TIME,
                        this._LAST_UPDATED_BY,
                        this._LAST_UPDATED_TIME};
        }

        public override void SetPropertyValues(System.Data.IDataReader reader)
        {
            if ((false == reader.IsDBNull(0)))
            {
                this._USER_ID = reader.GetString(0);
            }
            if ((false == reader.IsDBNull(1)))
            {
                this._USER_NAME = reader.GetString(1);
            }
            if ((false == reader.IsDBNull(2)))
            {
                this._USER_NICKNAME = reader.GetString(2);
            }
            if ((false == reader.IsDBNull(3)))
            {
                this._PASSWORD = reader.GetString(3);
            }
            if ((false == reader.IsDBNull(4)))
            {
                this._USER_TYPE = reader.GetInt32(4);
            }
            if ((false == reader.IsDBNull(5)))
            {
                this._USER_IMAGE = reader.GetString(5);
            }
            if ((false == reader.IsDBNull(6)))
            {
                this._ACTIVE_DATE = this.GetDateTime(reader, 6);
            }
            if ((false == reader.IsDBNull(7)))
            {
                this._DISABLE_DATE = this.GetDateTime(reader, 7);
            }
            if ((false == reader.IsDBNull(8)))
            {
                this._STATUS = reader.GetInt32(8);
            }
            if ((false == reader.IsDBNull(9)))
            {
                this._BUILT_IN = reader.GetInt32(9);
            }
            if ((false == reader.IsDBNull(10)))
            {
                this._USER_DESC = reader.GetString(10);
            }
            if ((false == reader.IsDBNull(11)))
            {
                this._MOBILE = reader.GetString(11);
            }
            if ((false == reader.IsDBNull(12)))
            {
                this._EMAIL = reader.GetString(12);
            }
            if ((false == reader.IsDBNull(13)))
            {
                this._CREATED_BY = reader.GetString(13);
            }
            if ((false == reader.IsDBNull(14)))
            {
                this._CREATED_TIME = this.GetDateTime(reader, 14);
            }
            if ((false == reader.IsDBNull(15)))
            {
                this._LAST_UPDATED_BY = reader.GetString(15);
            }
            if ((false == reader.IsDBNull(16)))
            {
                this._LAST_UPDATED_TIME = this.GetDateTime(reader, 16);
            }
            this.ReloadQueries(false);
        }

        public override void SetPropertyValues(System.Data.DataRow row)
        {
            if ((false == row.IsNull(0)))
            {
                this._USER_ID = ((string)(row[0]));
            }
            if ((false == row.IsNull(1)))
            {
                this._USER_NAME = ((string)(row[1]));
            }
            if ((false == row.IsNull(2)))
            {
                this._USER_NICKNAME = ((string)(row[2]));
            }
            if ((false == row.IsNull(3)))
            {
                this._PASSWORD = ((string)(row[3]));
            }
            if ((false == row.IsNull(4)))
            {
                this._USER_TYPE = ((int)(row[4]));
            }
            if ((false == row.IsNull(5)))
            {
                this._USER_IMAGE = ((string)(row[5]));
            }
            if ((false == row.IsNull(6)))
            {
                this._ACTIVE_DATE = this.GetDateTime(row, 6);
            }
            if ((false == row.IsNull(7)))
            {
                this._DISABLE_DATE = this.GetDateTime(row, 7);
            }
            if ((false == row.IsNull(8)))
            {
                this._STATUS = ((int)(row[8]));
            }
            if ((false == row.IsNull(9)))
            {
                this._BUILT_IN = ((int)(row[9]));
            }
            if ((false == row.IsNull(10)))
            {
                this._USER_DESC = ((string)(row[10]));
            }
            if ((false == row.IsNull(11)))
            {
                this._MOBILE = ((string)(row[11]));
            }
            if ((false == row.IsNull(12)))
            {
                this._EMAIL = ((string)(row[12]));
            }
            if ((false == row.IsNull(13)))
            {
                this._CREATED_BY = ((string)(row[13]));
            }
            if ((false == row.IsNull(14)))
            {
                this._CREATED_TIME = this.GetDateTime(row, 14);
            }
            if ((false == row.IsNull(15)))
            {
                this._LAST_UPDATED_BY = ((string)(row[15]));
            }
            if ((false == row.IsNull(16)))
            {
                this._LAST_UPDATED_TIME = this.GetDateTime(row, 16);
            }
            this.ReloadQueries(false);
        }

        public override int GetHashCode()
        {
            return base.GetHashCode();
        }

        public override bool Equals(object obj)
        {
            if ((obj == null))
            {
                return false;
            }
            if ((false == typeof(global::SYSEntity.SYS_USER).IsAssignableFrom(obj.GetType())))
            {
                return false;
            }
            if ((((object)(this)) == ((object)(obj))))
            {
                return true;
            }
            return ((this.isAttached && ((global::SYSEntity.SYS_USER)(obj)).isAttached)
                        && (this.USER_ID == ((global::SYSEntity.SYS_USER)(obj)).USER_ID));
        }

        public static @__Columns @__Alias(string aliasName)
        {
            return new @__Columns(aliasName);
        }

        public class @__Columns
        {

            protected string aliasName;

            protected NBear.Common.PropertyItem _USER_ID = new NBear.Common.PropertyItem("USER_ID", "SYSEntity.SYS_USER");

            protected NBear.Common.PropertyItem _USER_NAME = new NBear.Common.PropertyItem("USER_NAME", "SYSEntity.SYS_USER");

            protected NBear.Common.PropertyItem _USER_NICKNAME = new NBear.Common.PropertyItem("USER_NICKNAME", "SYSEntity.SYS_USER");

            protected NBear.Common.PropertyItem _PASSWORD = new NBear.Common.PropertyItem("PASSWORD", "SYSEntity.SYS_USER");

            protected NBear.Common.PropertyItem _USER_TYPE = new NBear.Common.PropertyItem("USER_TYPE", "SYSEntity.SYS_USER");

            protected NBear.Common.PropertyItem _USER_IMAGE = new NBear.Common.PropertyItem("USER_IMAGE", "SYSEntity.SYS_USER");

            protected NBear.Common.PropertyItem _ACTIVE_DATE = new NBear.Common.PropertyItem("ACTIVE_DATE", "SYSEntity.SYS_USER");

            protected NBear.Common.PropertyItem _DISABLE_DATE = new NBear.Common.PropertyItem("DISABLE_DATE", "SYSEntity.SYS_USER");

            protected NBear.Common.PropertyItem _STATUS = new NBear.Common.PropertyItem("STATUS", "SYSEntity.SYS_USER");

            protected NBear.Common.PropertyItem _BUILT_IN = new NBear.Common.PropertyItem("BUILT_IN", "SYSEntity.SYS_USER");

            protected NBear.Common.PropertyItem _USER_DESC = new NBear.Common.PropertyItem("USER_DESC", "SYSEntity.SYS_USER");

            protected NBear.Common.PropertyItem _MOBILE = new NBear.Common.PropertyItem("MOBILE", "SYSEntity.SYS_USER");

            protected NBear.Common.PropertyItem _EMAIL = new NBear.Common.PropertyItem("EMAIL", "SYSEntity.SYS_USER");

            protected NBear.Common.PropertyItem _CREATED_BY = new NBear.Common.PropertyItem("CREATED_BY", "SYSEntity.SYS_USER");

            protected NBear.Common.PropertyItem _CREATED_TIME = new NBear.Common.PropertyItem("CREATED_TIME", "SYSEntity.SYS_USER");

            protected NBear.Common.PropertyItem _LAST_UPDATED_BY = new NBear.Common.PropertyItem("LAST_UPDATED_BY", "SYSEntity.SYS_USER");

            protected NBear.Common.PropertyItem _LAST_UPDATED_TIME = new NBear.Common.PropertyItem("LAST_UPDATED_TIME", "SYSEntity.SYS_USER");

            public @__Columns()
            {
            }

            public @__Columns(string aliasName)
            {
                this.aliasName = aliasName;
            }

            public NBear.Common.PropertyItem USER_ID
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _USER_ID;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("USER_ID", _USER_ID.EntityConfiguration, _USER_ID.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem USER_NAME
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _USER_NAME;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("USER_NAME", _USER_NAME.EntityConfiguration, _USER_NAME.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem USER_NICKNAME
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _USER_NICKNAME;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("USER_NICKNAME", _USER_NICKNAME.EntityConfiguration, _USER_NICKNAME.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem PASSWORD
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _PASSWORD;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("PASSWORD", _PASSWORD.EntityConfiguration, _PASSWORD.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem USER_TYPE
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _USER_TYPE;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("USER_TYPE", _USER_TYPE.EntityConfiguration, _USER_TYPE.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem USER_IMAGE
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _USER_IMAGE;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("USER_IMAGE", _USER_IMAGE.EntityConfiguration, _USER_IMAGE.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem ACTIVE_DATE
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _ACTIVE_DATE;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("ACTIVE_DATE", _ACTIVE_DATE.EntityConfiguration, _ACTIVE_DATE.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem DISABLE_DATE
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _DISABLE_DATE;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("DISABLE_DATE", _DISABLE_DATE.EntityConfiguration, _DISABLE_DATE.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem STATUS
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _STATUS;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("STATUS", _STATUS.EntityConfiguration, _STATUS.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem BUILT_IN
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _BUILT_IN;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("BUILT_IN", _BUILT_IN.EntityConfiguration, _BUILT_IN.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem USER_DESC
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _USER_DESC;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("USER_DESC", _USER_DESC.EntityConfiguration, _USER_DESC.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem MOBILE
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _MOBILE;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("MOBILE", _MOBILE.EntityConfiguration, _MOBILE.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem EMAIL
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _EMAIL;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("EMAIL", _EMAIL.EntityConfiguration, _EMAIL.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem CREATED_BY
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _CREATED_BY;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("CREATED_BY", _CREATED_BY.EntityConfiguration, _CREATED_BY.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem CREATED_TIME
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _CREATED_TIME;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("CREATED_TIME", _CREATED_TIME.EntityConfiguration, _CREATED_TIME.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem LAST_UPDATED_BY
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _LAST_UPDATED_BY;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("LAST_UPDATED_BY", _LAST_UPDATED_BY.EntityConfiguration, _LAST_UPDATED_BY.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem LAST_UPDATED_TIME
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _LAST_UPDATED_TIME;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("LAST_UPDATED_TIME", _LAST_UPDATED_TIME.EntityConfiguration, _LAST_UPDATED_TIME.PropertyConfiguration, aliasName);
                    }
                }
            }
        }
    }
}
namespace SYSEntity
{
    using System;
    using System.Xml.Serialization;
    using NBear.Common;


    [System.SerializableAttribute()]
    public partial class TB_DATA_AGENTArrayList : NBear.Common.EntityArrayList<SYSEntity.TB_DATA_AGENT>
    {
    }

    [System.SerializableAttribute()]
    [NBear.Common.EmbeddedEntityConfigurationAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<EntityConfiguration xmlns:xsd=\"http://w" +
    "ww.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" " +
    "name=\"SYSEntity.TB_DATA_AGENT\" isReadOnly=\"false\" isAutoPreLoad=\"false\" isBatchU" +
    "pdate=\"false\" isRelation=\"false\" mappingName=\"TB_DATA_AGENT\" batchSize=\"10\">\r\n  " +
    "<Properties>\r\n    <Property name=\"AGENT_ID\" type=\"System.String\" isInherited=\"fa" +
    "lse\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"fals" +
    "e\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=" +
    "\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"A" +
    "GENT_ID\" mappingColumnType=\"System.String\" sqlType=\"varchar(36)\" isPrimaryKey=\"t" +
    "rue\" isNotNull=\"true\" />\r\n    <Property name=\"AGENT_ACCOUNT\" type=\"System.String" +
    "\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"fal" +
    "se\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\"" +
    " isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"fals" +
    "e\" mappingName=\"AGENT_ACCOUNT\" mappingColumnType=\"System.String\" sqlType=\"varcha" +
    "r(50)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"USER_ID\" t" +
    "ype=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false" +
    "\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isR" +
    "elationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSeriali" +
    "zationIgnore=\"false\" mappingName=\"USER_ID\" mappingColumnType=\"System.String\" sql" +
    "Type=\"varchar(36)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name" +
    "=\"AGENT_NO\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompou" +
    "ndUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoa" +
    "d=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"fal" +
    "se\" isSerializationIgnore=\"false\" mappingName=\"AGENT_NO\" mappingColumnType=\"Syst" +
    "em.String\" sqlType=\"varchar(50)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    " +
    "<Property name=\"AGENT_NAME\" type=\"System.String\" isInherited=\"false\" isReadOnly=" +
    "\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"" +
    "false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexP" +
    "ropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"AGENT_NAME\" mappi" +
    "ngColumnType=\"System.String\" sqlType=\"varchar(100)\" isPrimaryKey=\"false\" isNotNu" +
    "ll=\"false\" />\r\n    <Property name=\"AGENT_CARD_NUMBER\" type=\"System.Nullable`1[Sy" +
    "stem.Decimal]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isC" +
    "ontained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelati" +
    "onKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializatio" +
    "nIgnore=\"false\" mappingName=\"AGENT_CARD_NUMBER\" mappingColumnType=\"System.Nullab" +
    "le`1[System.Decimal]\" sqlType=\"decimal\" isPrimaryKey=\"false\" isNotNull=\"false\" /" +
    ">\r\n    <Property name=\"AGENT_AREA\" type=\"System.String\" isInherited=\"false\" isRe" +
    "adOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFrie" +
    "ndKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" i" +
    "sIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"AGENT_AREA" +
    "\" mappingColumnType=\"System.String\" sqlType=\"varchar(100)\" isPrimaryKey=\"false\" " +
    "isNotNull=\"false\" />\r\n    <Property name=\"AGENT_CONTACTS\" type=\"System.String\" i" +
    "sInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\"" +
    " isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" is" +
    "IndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" " +
    "mappingName=\"AGENT_CONTACTS\" mappingColumnType=\"System.String\" sqlType=\"varchar(" +
    "100)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"AGENT_TEL\" " +
    "type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"fals" +
    "e\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" is" +
    "RelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerial" +
    "izationIgnore=\"false\" mappingName=\"AGENT_TEL\" mappingColumnType=\"System.String\" " +
    "sqlType=\"varchar(100)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property " +
    "name=\"AGENT_BUSINESS_LICENSE\" type=\"System.String\" isInherited=\"false\" isReadOnl" +
    "y=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey" +
    "=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isInde" +
    "xPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"AGENT_BUSINESS_" +
    "LICENSE\" mappingColumnType=\"System.String\" sqlType=\"varchar(200)\" isPrimaryKey=\"" +
    "false\" isNotNull=\"false\" />\r\n    <Property name=\"AGENT_ID_CARD\" type=\"System.Str" +
    "ing\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"" +
    "false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"fal" +
    "se\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"f" +
    "alse\" mappingName=\"AGENT_ID_CARD\" mappingColumnType=\"System.String\" sqlType=\"var" +
    "char(200)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"AGENT_" +
    "COMMITMENT_LETTER\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" i" +
    "sCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" is" +
    "LazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDe" +
    "sc=\"false\" isSerializationIgnore=\"false\" mappingName=\"AGENT_COMMITMENT_LETTER\" m" +
    "appingColumnType=\"System.String\" sqlType=\"varchar(200)\" isPrimaryKey=\"false\" isN" +
    "otNull=\"false\" />\r\n    <Property name=\"STATUS\" type=\"System.Nullable`1[System.In" +
    "t32]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=" +
    "\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"fa" +
    "lse\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"" +
    "false\" mappingName=\"STATUS\" mappingColumnType=\"System.Nullable`1[System.Int32]\" " +
    "sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"CRE" +
    "ATED_BY\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundU" +
    "nit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"" +
    "false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\"" +
    " isSerializationIgnore=\"false\" mappingName=\"CREATED_BY\" mappingColumnType=\"Syste" +
    "m.String\" sqlType=\"varchar(36)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <" +
    "Property name=\"CREATED_TIME\" type=\"System.Nullable`1[System.DateTime]\" isInherit" +
    "ed=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery" +
    "=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexPro" +
    "perty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingN" +
    "ame=\"CREATED_TIME\" mappingColumnType=\"System.Nullable`1[System.DateTime]\" sqlTyp" +
    "e=\"datetime\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"LAST" +
    "_UPDATED_BY\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompo" +
    "undUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLo" +
    "ad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"fa" +
    "lse\" isSerializationIgnore=\"false\" mappingName=\"LAST_UPDATED_BY\" mappingColumnTy" +
    "pe=\"System.String\" sqlType=\"varchar(36)\" isPrimaryKey=\"false\" isNotNull=\"false\" " +
    "/>\r\n    <Property name=\"LAST_UPDATED_TIME\" type=\"System.Nullable`1[System.DateTi" +
    "me]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"" +
    "false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"fal" +
    "se\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"f" +
    "alse\" mappingName=\"LAST_UPDATED_TIME\" mappingColumnType=\"System.Nullable`1[Syste" +
    "m.DateTime]\" sqlType=\"datetime\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n  </P" +
    "roperties>\r\n</EntityConfiguration>")]
    public partial class TB_DATA_AGENT : NBear.Common.Entity
    {

        protected static NBear.Common.EntityConfiguration _TB_DATA_AGENTEntityConfiguration;

        protected string _AGENT_ID;

        protected string _AGENT_ACCOUNT;

        protected string _USER_ID;

        protected string _AGENT_NO;

        protected string _AGENT_NAME;

        protected global::System.Decimal? _AGENT_CARD_NUMBER;

        protected string _AGENT_AREA;

        protected string _AGENT_CONTACTS;

        protected string _AGENT_TEL;

        protected string _AGENT_BUSINESS_LICENSE;

        protected string _AGENT_ID_CARD;

        protected string _AGENT_COMMITMENT_LETTER;

        protected global::System.Int32? _STATUS;

        protected string _CREATED_BY;

        protected global::System.DateTime? _CREATED_TIME;

        protected string _LAST_UPDATED_BY;

        protected global::System.DateTime? _LAST_UPDATED_TIME;

        public static @__Columns _ = new @__Columns();

        public static bool operator ==(global::SYSEntity.TB_DATA_AGENT left, global::SYSEntity.TB_DATA_AGENT right) { return ((object)left) != null ? left.Equals(right) : ((object)right) == null ? true : false; }


        public static bool operator !=(global::SYSEntity.TB_DATA_AGENT left, global::SYSEntity.TB_DATA_AGENT right) { return ((object)left) != null ? !left.Equals(right) : ((object)right) == null ? false : true; }



        public string AGENT_ID
        {
            get
            {
                return this._AGENT_ID;
            }
            set
            {
                this.OnPropertyChanged("AGENT_ID", this._AGENT_ID, value);
                this._AGENT_ID = value;
            }
        }

        public string AGENT_ACCOUNT
        {
            get
            {
                return this._AGENT_ACCOUNT;
            }
            set
            {
                this.OnPropertyChanged("AGENT_ACCOUNT", this._AGENT_ACCOUNT, value);
                this._AGENT_ACCOUNT = value;
            }
        }

        public string USER_ID
        {
            get
            {
                return this._USER_ID;
            }
            set
            {
                this.OnPropertyChanged("USER_ID", this._USER_ID, value);
                this._USER_ID = value;
            }
        }

        public string AGENT_NO
        {
            get
            {
                return this._AGENT_NO;
            }
            set
            {
                this.OnPropertyChanged("AGENT_NO", this._AGENT_NO, value);
                this._AGENT_NO = value;
            }
        }

        public string AGENT_NAME
        {
            get
            {
                return this._AGENT_NAME;
            }
            set
            {
                this.OnPropertyChanged("AGENT_NAME", this._AGENT_NAME, value);
                this._AGENT_NAME = value;
            }
        }

        public global::System.Decimal? AGENT_CARD_NUMBER
        {
            get
            {
                return this._AGENT_CARD_NUMBER;
            }
            set
            {
                this.OnPropertyChanged("AGENT_CARD_NUMBER", this._AGENT_CARD_NUMBER, value);
                this._AGENT_CARD_NUMBER = value;
            }
        }

        public string AGENT_AREA
        {
            get
            {
                return this._AGENT_AREA;
            }
            set
            {
                this.OnPropertyChanged("AGENT_AREA", this._AGENT_AREA, value);
                this._AGENT_AREA = value;
            }
        }

        public string AGENT_CONTACTS
        {
            get
            {
                return this._AGENT_CONTACTS;
            }
            set
            {
                this.OnPropertyChanged("AGENT_CONTACTS", this._AGENT_CONTACTS, value);
                this._AGENT_CONTACTS = value;
            }
        }

        public string AGENT_TEL
        {
            get
            {
                return this._AGENT_TEL;
            }
            set
            {
                this.OnPropertyChanged("AGENT_TEL", this._AGENT_TEL, value);
                this._AGENT_TEL = value;
            }
        }

        public string AGENT_BUSINESS_LICENSE
        {
            get
            {
                return this._AGENT_BUSINESS_LICENSE;
            }
            set
            {
                this.OnPropertyChanged("AGENT_BUSINESS_LICENSE", this._AGENT_BUSINESS_LICENSE, value);
                this._AGENT_BUSINESS_LICENSE = value;
            }
        }

        public string AGENT_ID_CARD
        {
            get
            {
                return this._AGENT_ID_CARD;
            }
            set
            {
                this.OnPropertyChanged("AGENT_ID_CARD", this._AGENT_ID_CARD, value);
                this._AGENT_ID_CARD = value;
            }
        }

        public string AGENT_COMMITMENT_LETTER
        {
            get
            {
                return this._AGENT_COMMITMENT_LETTER;
            }
            set
            {
                this.OnPropertyChanged("AGENT_COMMITMENT_LETTER", this._AGENT_COMMITMENT_LETTER, value);
                this._AGENT_COMMITMENT_LETTER = value;
            }
        }

        public global::System.Int32? STATUS
        {
            get
            {
                return this._STATUS;
            }
            set
            {
                this.OnPropertyChanged("STATUS", this._STATUS, value);
                this._STATUS = value;
            }
        }

        public string CREATED_BY
        {
            get
            {
                return this._CREATED_BY;
            }
            set
            {
                this.OnPropertyChanged("CREATED_BY", this._CREATED_BY, value);
                this._CREATED_BY = value;
            }
        }

        public global::System.DateTime? CREATED_TIME
        {
            get
            {
                return this._CREATED_TIME;
            }
            set
            {
                this.OnPropertyChanged("CREATED_TIME", this._CREATED_TIME, value);
                this._CREATED_TIME = value;
            }
        }

        public string LAST_UPDATED_BY
        {
            get
            {
                return this._LAST_UPDATED_BY;
            }
            set
            {
                this.OnPropertyChanged("LAST_UPDATED_BY", this._LAST_UPDATED_BY, value);
                this._LAST_UPDATED_BY = value;
            }
        }

        public global::System.DateTime? LAST_UPDATED_TIME
        {
            get
            {
                return this._LAST_UPDATED_TIME;
            }
            set
            {
                this.OnPropertyChanged("LAST_UPDATED_TIME", this._LAST_UPDATED_TIME, value);
                this._LAST_UPDATED_TIME = value;
            }
        }

        public override NBear.Common.EntityConfiguration GetEntityConfiguration()
        {
            if ((TB_DATA_AGENT._TB_DATA_AGENTEntityConfiguration == null))
            {
                TB_DATA_AGENT._TB_DATA_AGENTEntityConfiguration = NBear.Common.MetaDataManager.GetEntityConfiguration("SYSEntity.TB_DATA_AGENT");
            }
            return TB_DATA_AGENT._TB_DATA_AGENTEntityConfiguration;
        }

        public override void ReloadQueries(bool includeLazyLoadQueries)
        {
        }

        public override object[] GetPropertyValues()
        {
            return new object[] {
                        this._AGENT_ID,
                        this._AGENT_ACCOUNT,
                        this._USER_ID,
                        this._AGENT_NO,
                        this._AGENT_NAME,
                        this._AGENT_CARD_NUMBER,
                        this._AGENT_AREA,
                        this._AGENT_CONTACTS,
                        this._AGENT_TEL,
                        this._AGENT_BUSINESS_LICENSE,
                        this._AGENT_ID_CARD,
                        this._AGENT_COMMITMENT_LETTER,
                        this._STATUS,
                        this._CREATED_BY,
                        this._CREATED_TIME,
                        this._LAST_UPDATED_BY,
                        this._LAST_UPDATED_TIME};
        }

        public override void SetPropertyValues(System.Data.IDataReader reader)
        {
            if ((false == reader.IsDBNull(0)))
            {
                this._AGENT_ID = reader.GetString(0);
            }
            if ((false == reader.IsDBNull(1)))
            {
                this._AGENT_ACCOUNT = reader.GetString(1);
            }
            if ((false == reader.IsDBNull(2)))
            {
                this._USER_ID = reader.GetString(2);
            }
            if ((false == reader.IsDBNull(3)))
            {
                this._AGENT_NO = reader.GetString(3);
            }
            if ((false == reader.IsDBNull(4)))
            {
                this._AGENT_NAME = reader.GetString(4);
            }
            if ((false == reader.IsDBNull(5)))
            {
                this._AGENT_CARD_NUMBER = reader.GetDecimal(5);
            }
            if ((false == reader.IsDBNull(6)))
            {
                this._AGENT_AREA = reader.GetString(6);
            }
            if ((false == reader.IsDBNull(7)))
            {
                this._AGENT_CONTACTS = reader.GetString(7);
            }
            if ((false == reader.IsDBNull(8)))
            {
                this._AGENT_TEL = reader.GetString(8);
            }
            if ((false == reader.IsDBNull(9)))
            {
                this._AGENT_BUSINESS_LICENSE = reader.GetString(9);
            }
            if ((false == reader.IsDBNull(10)))
            {
                this._AGENT_ID_CARD = reader.GetString(10);
            }
            if ((false == reader.IsDBNull(11)))
            {
                this._AGENT_COMMITMENT_LETTER = reader.GetString(11);
            }
            if ((false == reader.IsDBNull(12)))
            {
                this._STATUS = reader.GetInt32(12);
            }
            if ((false == reader.IsDBNull(13)))
            {
                this._CREATED_BY = reader.GetString(13);
            }
            if ((false == reader.IsDBNull(14)))
            {
                this._CREATED_TIME = this.GetDateTime(reader, 14);
            }
            if ((false == reader.IsDBNull(15)))
            {
                this._LAST_UPDATED_BY = reader.GetString(15);
            }
            if ((false == reader.IsDBNull(16)))
            {
                this._LAST_UPDATED_TIME = this.GetDateTime(reader, 16);
            }
            this.ReloadQueries(false);
        }

        public override void SetPropertyValues(System.Data.DataRow row)
        {
            if ((false == row.IsNull(0)))
            {
                this._AGENT_ID = ((string)(row[0]));
            }
            if ((false == row.IsNull(1)))
            {
                this._AGENT_ACCOUNT = ((string)(row[1]));
            }
            if ((false == row.IsNull(2)))
            {
                this._USER_ID = ((string)(row[2]));
            }
            if ((false == row.IsNull(3)))
            {
                this._AGENT_NO = ((string)(row[3]));
            }
            if ((false == row.IsNull(4)))
            {
                this._AGENT_NAME = ((string)(row[4]));
            }
            if ((false == row.IsNull(5)))
            {
                this._AGENT_CARD_NUMBER = ((System.Nullable<decimal>)(row[5]));
            }
            if ((false == row.IsNull(6)))
            {
                this._AGENT_AREA = ((string)(row[6]));
            }
            if ((false == row.IsNull(7)))
            {
                this._AGENT_CONTACTS = ((string)(row[7]));
            }
            if ((false == row.IsNull(8)))
            {
                this._AGENT_TEL = ((string)(row[8]));
            }
            if ((false == row.IsNull(9)))
            {
                this._AGENT_BUSINESS_LICENSE = ((string)(row[9]));
            }
            if ((false == row.IsNull(10)))
            {
                this._AGENT_ID_CARD = ((string)(row[10]));
            }
            if ((false == row.IsNull(11)))
            {
                this._AGENT_COMMITMENT_LETTER = ((string)(row[11]));
            }
            if ((false == row.IsNull(12)))
            {
                this._STATUS = ((System.Nullable<int>)(row[12]));
            }
            if ((false == row.IsNull(13)))
            {
                this._CREATED_BY = ((string)(row[13]));
            }
            if ((false == row.IsNull(14)))
            {
                this._CREATED_TIME = this.GetDateTime(row, 14);
            }
            if ((false == row.IsNull(15)))
            {
                this._LAST_UPDATED_BY = ((string)(row[15]));
            }
            if ((false == row.IsNull(16)))
            {
                this._LAST_UPDATED_TIME = this.GetDateTime(row, 16);
            }
            this.ReloadQueries(false);
        }

        public override int GetHashCode()
        {
            return base.GetHashCode();
        }

        public override bool Equals(object obj)
        {
            if ((obj == null))
            {
                return false;
            }
            if ((false == typeof(global::SYSEntity.TB_DATA_AGENT).IsAssignableFrom(obj.GetType())))
            {
                return false;
            }
            if ((((object)(this)) == ((object)(obj))))
            {
                return true;
            }
            return ((this.isAttached && ((global::SYSEntity.TB_DATA_AGENT)(obj)).isAttached)
                        && (this.AGENT_ID == ((global::SYSEntity.TB_DATA_AGENT)(obj)).AGENT_ID));
        }

        public static @__Columns @__Alias(string aliasName)
        {
            return new @__Columns(aliasName);
        }

        public class @__Columns
        {

            protected string aliasName;

            protected NBear.Common.PropertyItem _AGENT_ID = new NBear.Common.PropertyItem("AGENT_ID", "SYSEntity.TB_DATA_AGENT");

            protected NBear.Common.PropertyItem _AGENT_ACCOUNT = new NBear.Common.PropertyItem("AGENT_ACCOUNT", "SYSEntity.TB_DATA_AGENT");

            protected NBear.Common.PropertyItem _USER_ID = new NBear.Common.PropertyItem("USER_ID", "SYSEntity.TB_DATA_AGENT");

            protected NBear.Common.PropertyItem _AGENT_NO = new NBear.Common.PropertyItem("AGENT_NO", "SYSEntity.TB_DATA_AGENT");

            protected NBear.Common.PropertyItem _AGENT_NAME = new NBear.Common.PropertyItem("AGENT_NAME", "SYSEntity.TB_DATA_AGENT");

            protected NBear.Common.PropertyItem _AGENT_CARD_NUMBER = new NBear.Common.PropertyItem("AGENT_CARD_NUMBER", "SYSEntity.TB_DATA_AGENT");

            protected NBear.Common.PropertyItem _AGENT_AREA = new NBear.Common.PropertyItem("AGENT_AREA", "SYSEntity.TB_DATA_AGENT");

            protected NBear.Common.PropertyItem _AGENT_CONTACTS = new NBear.Common.PropertyItem("AGENT_CONTACTS", "SYSEntity.TB_DATA_AGENT");

            protected NBear.Common.PropertyItem _AGENT_TEL = new NBear.Common.PropertyItem("AGENT_TEL", "SYSEntity.TB_DATA_AGENT");

            protected NBear.Common.PropertyItem _AGENT_BUSINESS_LICENSE = new NBear.Common.PropertyItem("AGENT_BUSINESS_LICENSE", "SYSEntity.TB_DATA_AGENT");

            protected NBear.Common.PropertyItem _AGENT_ID_CARD = new NBear.Common.PropertyItem("AGENT_ID_CARD", "SYSEntity.TB_DATA_AGENT");

            protected NBear.Common.PropertyItem _AGENT_COMMITMENT_LETTER = new NBear.Common.PropertyItem("AGENT_COMMITMENT_LETTER", "SYSEntity.TB_DATA_AGENT");

            protected NBear.Common.PropertyItem _STATUS = new NBear.Common.PropertyItem("STATUS", "SYSEntity.TB_DATA_AGENT");

            protected NBear.Common.PropertyItem _CREATED_BY = new NBear.Common.PropertyItem("CREATED_BY", "SYSEntity.TB_DATA_AGENT");

            protected NBear.Common.PropertyItem _CREATED_TIME = new NBear.Common.PropertyItem("CREATED_TIME", "SYSEntity.TB_DATA_AGENT");

            protected NBear.Common.PropertyItem _LAST_UPDATED_BY = new NBear.Common.PropertyItem("LAST_UPDATED_BY", "SYSEntity.TB_DATA_AGENT");

            protected NBear.Common.PropertyItem _LAST_UPDATED_TIME = new NBear.Common.PropertyItem("LAST_UPDATED_TIME", "SYSEntity.TB_DATA_AGENT");

            public @__Columns()
            {
            }

            public @__Columns(string aliasName)
            {
                this.aliasName = aliasName;
            }

            public NBear.Common.PropertyItem AGENT_ID
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _AGENT_ID;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("AGENT_ID", _AGENT_ID.EntityConfiguration, _AGENT_ID.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem AGENT_ACCOUNT
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _AGENT_ACCOUNT;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("AGENT_ACCOUNT", _AGENT_ACCOUNT.EntityConfiguration, _AGENT_ACCOUNT.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem USER_ID
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _USER_ID;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("USER_ID", _USER_ID.EntityConfiguration, _USER_ID.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem AGENT_NO
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _AGENT_NO;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("AGENT_NO", _AGENT_NO.EntityConfiguration, _AGENT_NO.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem AGENT_NAME
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _AGENT_NAME;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("AGENT_NAME", _AGENT_NAME.EntityConfiguration, _AGENT_NAME.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem AGENT_CARD_NUMBER
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _AGENT_CARD_NUMBER;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("AGENT_CARD_NUMBER", _AGENT_CARD_NUMBER.EntityConfiguration, _AGENT_CARD_NUMBER.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem AGENT_AREA
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _AGENT_AREA;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("AGENT_AREA", _AGENT_AREA.EntityConfiguration, _AGENT_AREA.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem AGENT_CONTACTS
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _AGENT_CONTACTS;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("AGENT_CONTACTS", _AGENT_CONTACTS.EntityConfiguration, _AGENT_CONTACTS.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem AGENT_TEL
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _AGENT_TEL;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("AGENT_TEL", _AGENT_TEL.EntityConfiguration, _AGENT_TEL.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem AGENT_BUSINESS_LICENSE
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _AGENT_BUSINESS_LICENSE;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("AGENT_BUSINESS_LICENSE", _AGENT_BUSINESS_LICENSE.EntityConfiguration, _AGENT_BUSINESS_LICENSE.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem AGENT_ID_CARD
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _AGENT_ID_CARD;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("AGENT_ID_CARD", _AGENT_ID_CARD.EntityConfiguration, _AGENT_ID_CARD.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem AGENT_COMMITMENT_LETTER
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _AGENT_COMMITMENT_LETTER;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("AGENT_COMMITMENT_LETTER", _AGENT_COMMITMENT_LETTER.EntityConfiguration, _AGENT_COMMITMENT_LETTER.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem STATUS
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _STATUS;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("STATUS", _STATUS.EntityConfiguration, _STATUS.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem CREATED_BY
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _CREATED_BY;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("CREATED_BY", _CREATED_BY.EntityConfiguration, _CREATED_BY.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem CREATED_TIME
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _CREATED_TIME;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("CREATED_TIME", _CREATED_TIME.EntityConfiguration, _CREATED_TIME.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem LAST_UPDATED_BY
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _LAST_UPDATED_BY;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("LAST_UPDATED_BY", _LAST_UPDATED_BY.EntityConfiguration, _LAST_UPDATED_BY.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem LAST_UPDATED_TIME
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _LAST_UPDATED_TIME;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("LAST_UPDATED_TIME", _LAST_UPDATED_TIME.EntityConfiguration, _LAST_UPDATED_TIME.PropertyConfiguration, aliasName);
                    }
                }
            }
        }
    }
}
namespace SYSEntity
{
    using System;
    using System.Xml.Serialization;
    using NBear.Common;


    [System.SerializableAttribute()]
    public partial class TB_DATA_BRANDArrayList : NBear.Common.EntityArrayList<SYSEntity.TB_DATA_BRAND>
    {
    }

    [System.SerializableAttribute()]
    [NBear.Common.EmbeddedEntityConfigurationAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<EntityConfiguration xmlns:xsd=\"http://w" +
    "ww.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" " +
    "name=\"SYSEntity.TB_DATA_BRAND\" isReadOnly=\"false\" isAutoPreLoad=\"false\" isBatchU" +
    "pdate=\"false\" isRelation=\"false\" mappingName=\"TB_DATA_BRAND\" batchSize=\"10\">\r\n  " +
    "<Properties>\r\n    <Property name=\"BRAND_ID\" type=\"System.String\" isInherited=\"fa" +
    "lse\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"fals" +
    "e\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=" +
    "\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"B" +
    "RAND_ID\" mappingColumnType=\"System.String\" sqlType=\"varchar(36)\" isPrimaryKey=\"t" +
    "rue\" isNotNull=\"true\" />\r\n    <Property name=\"BRAND_NAME\" type=\"System.String\" i" +
    "sInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\"" +
    " isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" is" +
    "IndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" " +
    "mappingName=\"BRAND_NAME\" mappingColumnType=\"System.String\" sqlType=\"varchar(100)" +
    "\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"CREATED_BY\" typ" +
    "e=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" " +
    "isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRel" +
    "ationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializa" +
    "tionIgnore=\"false\" mappingName=\"CREATED_BY\" mappingColumnType=\"System.String\" sq" +
    "lType=\"varchar(36)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property nam" +
    "e=\"CREATED_TIME\" type=\"System.Nullable`1[System.DateTime]\" isInherited=\"false\" s" +
    "qlDefaultValue=\"getdate()\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained" +
    "=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"f" +
    "alse\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=" +
    "\"false\" mappingName=\"CREATED_TIME\" mappingColumnType=\"System.Nullable`1[System.D" +
    "ateTime]\" sqlType=\"datetime\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Pro" +
    "perty name=\"LAST_UPDATED_BY\" type=\"System.String\" isInherited=\"false\" isReadOnly" +
    "=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=" +
    "\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndex" +
    "PropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"LAST_UPDATED_BY\"" +
    " mappingColumnType=\"System.String\" sqlType=\"varchar(36)\" isPrimaryKey=\"false\" is" +
    "NotNull=\"false\" />\r\n    <Property name=\"LAST_UPDATED_TIME\" type=\"System.Nullable" +
    "`1[System.DateTime]\" isInherited=\"false\" sqlDefaultValue=\"getdate()\" isReadOnly=" +
    "\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"" +
    "false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexP" +
    "ropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"LAST_UPDATED_TIME" +
    "\" mappingColumnType=\"System.Nullable`1[System.DateTime]\" sqlType=\"datetime\" isPr" +
    "imaryKey=\"false\" isNotNull=\"false\" />\r\n  </Properties>\r\n</EntityConfiguration>")]
    public partial class TB_DATA_BRAND : NBear.Common.Entity
    {

        protected static NBear.Common.EntityConfiguration _TB_DATA_BRANDEntityConfiguration;

        protected string _BRAND_ID;

        protected string _BRAND_NAME;

        protected string _CREATED_BY;

        protected global::System.DateTime? _CREATED_TIME;

        protected string _LAST_UPDATED_BY;

        protected global::System.DateTime? _LAST_UPDATED_TIME;

        public static @__Columns _ = new @__Columns();

        public static bool operator ==(global::SYSEntity.TB_DATA_BRAND left, global::SYSEntity.TB_DATA_BRAND right) { return ((object)left) != null ? left.Equals(right) : ((object)right) == null ? true : false; }


        public static bool operator !=(global::SYSEntity.TB_DATA_BRAND left, global::SYSEntity.TB_DATA_BRAND right) { return ((object)left) != null ? !left.Equals(right) : ((object)right) == null ? false : true; }



        public string BRAND_ID
        {
            get
            {
                return this._BRAND_ID;
            }
            set
            {
                this.OnPropertyChanged("BRAND_ID", this._BRAND_ID, value);
                this._BRAND_ID = value;
            }
        }

        public string BRAND_NAME
        {
            get
            {
                return this._BRAND_NAME;
            }
            set
            {
                this.OnPropertyChanged("BRAND_NAME", this._BRAND_NAME, value);
                this._BRAND_NAME = value;
            }
        }

        public string CREATED_BY
        {
            get
            {
                return this._CREATED_BY;
            }
            set
            {
                this.OnPropertyChanged("CREATED_BY", this._CREATED_BY, value);
                this._CREATED_BY = value;
            }
        }

        public global::System.DateTime? CREATED_TIME
        {
            get
            {
                return this._CREATED_TIME;
            }
            set
            {
                this.OnPropertyChanged("CREATED_TIME", this._CREATED_TIME, value);
                this._CREATED_TIME = value;
            }
        }

        public string LAST_UPDATED_BY
        {
            get
            {
                return this._LAST_UPDATED_BY;
            }
            set
            {
                this.OnPropertyChanged("LAST_UPDATED_BY", this._LAST_UPDATED_BY, value);
                this._LAST_UPDATED_BY = value;
            }
        }

        public global::System.DateTime? LAST_UPDATED_TIME
        {
            get
            {
                return this._LAST_UPDATED_TIME;
            }
            set
            {
                this.OnPropertyChanged("LAST_UPDATED_TIME", this._LAST_UPDATED_TIME, value);
                this._LAST_UPDATED_TIME = value;
            }
        }

        public override NBear.Common.EntityConfiguration GetEntityConfiguration()
        {
            if ((TB_DATA_BRAND._TB_DATA_BRANDEntityConfiguration == null))
            {
                TB_DATA_BRAND._TB_DATA_BRANDEntityConfiguration = NBear.Common.MetaDataManager.GetEntityConfiguration("SYSEntity.TB_DATA_BRAND");
            }
            return TB_DATA_BRAND._TB_DATA_BRANDEntityConfiguration;
        }

        public override void ReloadQueries(bool includeLazyLoadQueries)
        {
        }

        public override object[] GetPropertyValues()
        {
            return new object[] {
                        this._BRAND_ID,
                        this._BRAND_NAME,
                        this._CREATED_BY,
                        this._CREATED_TIME,
                        this._LAST_UPDATED_BY,
                        this._LAST_UPDATED_TIME};
        }

        public override void SetPropertyValues(System.Data.IDataReader reader)
        {
            if ((false == reader.IsDBNull(0)))
            {
                this._BRAND_ID = reader.GetString(0);
            }
            if ((false == reader.IsDBNull(1)))
            {
                this._BRAND_NAME = reader.GetString(1);
            }
            if ((false == reader.IsDBNull(2)))
            {
                this._CREATED_BY = reader.GetString(2);
            }
            if ((false == reader.IsDBNull(3)))
            {
                this._CREATED_TIME = this.GetDateTime(reader, 3);
            }
            if ((false == reader.IsDBNull(4)))
            {
                this._LAST_UPDATED_BY = reader.GetString(4);
            }
            if ((false == reader.IsDBNull(5)))
            {
                this._LAST_UPDATED_TIME = this.GetDateTime(reader, 5);
            }
            this.ReloadQueries(false);
        }

        public override void SetPropertyValues(System.Data.DataRow row)
        {
            if ((false == row.IsNull(0)))
            {
                this._BRAND_ID = ((string)(row[0]));
            }
            if ((false == row.IsNull(1)))
            {
                this._BRAND_NAME = ((string)(row[1]));
            }
            if ((false == row.IsNull(2)))
            {
                this._CREATED_BY = ((string)(row[2]));
            }
            if ((false == row.IsNull(3)))
            {
                this._CREATED_TIME = this.GetDateTime(row, 3);
            }
            if ((false == row.IsNull(4)))
            {
                this._LAST_UPDATED_BY = ((string)(row[4]));
            }
            if ((false == row.IsNull(5)))
            {
                this._LAST_UPDATED_TIME = this.GetDateTime(row, 5);
            }
            this.ReloadQueries(false);
        }

        public override int GetHashCode()
        {
            return base.GetHashCode();
        }

        public override bool Equals(object obj)
        {
            if ((obj == null))
            {
                return false;
            }
            if ((false == typeof(global::SYSEntity.TB_DATA_BRAND).IsAssignableFrom(obj.GetType())))
            {
                return false;
            }
            if ((((object)(this)) == ((object)(obj))))
            {
                return true;
            }
            return ((this.isAttached && ((global::SYSEntity.TB_DATA_BRAND)(obj)).isAttached)
                        && (this.BRAND_ID == ((global::SYSEntity.TB_DATA_BRAND)(obj)).BRAND_ID));
        }

        public static @__Columns @__Alias(string aliasName)
        {
            return new @__Columns(aliasName);
        }

        public class @__Columns
        {

            protected string aliasName;

            protected NBear.Common.PropertyItem _BRAND_ID = new NBear.Common.PropertyItem("BRAND_ID", "SYSEntity.TB_DATA_BRAND");

            protected NBear.Common.PropertyItem _BRAND_NAME = new NBear.Common.PropertyItem("BRAND_NAME", "SYSEntity.TB_DATA_BRAND");

            protected NBear.Common.PropertyItem _CREATED_BY = new NBear.Common.PropertyItem("CREATED_BY", "SYSEntity.TB_DATA_BRAND");

            protected NBear.Common.PropertyItem _CREATED_TIME = new NBear.Common.PropertyItem("CREATED_TIME", "SYSEntity.TB_DATA_BRAND");

            protected NBear.Common.PropertyItem _LAST_UPDATED_BY = new NBear.Common.PropertyItem("LAST_UPDATED_BY", "SYSEntity.TB_DATA_BRAND");

            protected NBear.Common.PropertyItem _LAST_UPDATED_TIME = new NBear.Common.PropertyItem("LAST_UPDATED_TIME", "SYSEntity.TB_DATA_BRAND");

            public @__Columns()
            {
            }

            public @__Columns(string aliasName)
            {
                this.aliasName = aliasName;
            }

            public NBear.Common.PropertyItem BRAND_ID
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _BRAND_ID;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("BRAND_ID", _BRAND_ID.EntityConfiguration, _BRAND_ID.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem BRAND_NAME
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _BRAND_NAME;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("BRAND_NAME", _BRAND_NAME.EntityConfiguration, _BRAND_NAME.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem CREATED_BY
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _CREATED_BY;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("CREATED_BY", _CREATED_BY.EntityConfiguration, _CREATED_BY.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem CREATED_TIME
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _CREATED_TIME;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("CREATED_TIME", _CREATED_TIME.EntityConfiguration, _CREATED_TIME.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem LAST_UPDATED_BY
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _LAST_UPDATED_BY;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("LAST_UPDATED_BY", _LAST_UPDATED_BY.EntityConfiguration, _LAST_UPDATED_BY.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem LAST_UPDATED_TIME
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _LAST_UPDATED_TIME;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("LAST_UPDATED_TIME", _LAST_UPDATED_TIME.EntityConfiguration, _LAST_UPDATED_TIME.PropertyConfiguration, aliasName);
                    }
                }
            }
        }
    }
}
namespace SYSEntity
{
    using System;
    using System.Xml.Serialization;
    using NBear.Common;


    [System.SerializableAttribute()]
    public partial class TB_DATA_CARDArrayList : NBear.Common.EntityArrayList<SYSEntity.TB_DATA_CARD>
    {
    }

    [System.SerializableAttribute()]
    [NBear.Common.EmbeddedEntityConfigurationAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<EntityConfiguration xmlns:xsd=\"http://w" +
    "ww.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" " +
    "name=\"SYSEntity.TB_DATA_CARD\" isReadOnly=\"false\" isAutoPreLoad=\"false\" isBatchUp" +
    "date=\"false\" isRelation=\"false\" mappingName=\"TB_DATA_CARD\" batchSize=\"10\">\r\n  <P" +
    "roperties>\r\n    <Property name=\"CARD_ID\" type=\"System.String\" isInherited=\"false" +
    "\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" " +
    "isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"fa" +
    "lse\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"CARD" +
    "_ID\" mappingColumnType=\"System.String\" sqlType=\"varchar(36)\" isPrimaryKey=\"true\"" +
    " isNotNull=\"true\" />\r\n    <Property name=\"AGENT_ID\" type=\"System.String\" isInher" +
    "ited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQue" +
    "ry=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexP" +
    "roperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappin" +
    "gName=\"AGENT_ID\" mappingColumnType=\"System.String\" sqlType=\"varchar(36)\" isPrima" +
    "ryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"END_CUSTOMER_ID\" type=\"Sys" +
    "tem.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isCont" +
    "ained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationK" +
    "ey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIg" +
    "nore=\"false\" mappingName=\"AGENT_ACCOUNT\" mappingColumnType=\"System.String\" sqlTy" +
    "pe=\"varchar(50)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"" +
    "BRAND_ID\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompound" +
    "Unit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=" +
    "\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false" +
    "\" isSerializationIgnore=\"false\" mappingName=\"BRAND_ID\" mappingColumnType=\"System" +
    ".String\" sqlType=\"varchar(36)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <P" +
    "roperty name=\"CARD_ICCID\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"f" +
    "alse\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"fa" +
    "lse\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPro" +
    "pertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"CARD_ICCID\" mapping" +
    "ColumnType=\"System.String\" sqlType=\"varchar(50)\" isPrimaryKey=\"false\" isNotNull=" +
    "\"false\" />\r\n    <Property name=\"CARD_NO\" type=\"System.String\" isInherited=\"false" +
    "\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" " +
    "isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"fa" +
    "lse\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"CARD" +
    "_NO\" mappingColumnType=\"System.String\" sqlType=\"varchar(50)\" isPrimaryKey=\"false" +
    "\" isNotNull=\"false\" />\r\n    <Property name=\"SERVICE_PROVIDER\" type=\"System.Strin" +
    "g\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"fa" +
    "lse\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false" +
    "\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"fal" +
    "se\" mappingName=\"SERVICE_PROVIDER\" mappingColumnType=\"System.String\" sqlType=\"va" +
    "rchar(50)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"STATUS" +
    "\" type=\"System.Nullable`1[System.Int32]\" isInherited=\"false\" isReadOnly=\"false\" " +
    "isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" i" +
    "sLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyD" +
    "esc=\"false\" isSerializationIgnore=\"false\" mappingName=\"STATUS\" mappingColumnType" +
    "=\"System.Nullable`1[System.Int32]\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=" +
    "\"false\" />\r\n    <Property name=\"IS_COMPLAINT\" type=\"System.Nullable`1[System.Int" +
    "32]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"" +
    "false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"fal" +
    "se\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"f" +
    "alse\" mappingName=\"IS_COMPLAINT\" mappingColumnType=\"System.Nullable`1[System.Int" +
    "32]\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name" +
    "=\"COMPLAINT_DATE\" type=\"System.Nullable`1[System.DateTime]\" isInherited=\"false\" " +
    "isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" is" +
    "FriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"fals" +
    "e\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"COMPLA" +
    "INT_DATE\" mappingColumnType=\"System.Nullable`1[System.DateTime]\" sqlType=\"dateti" +
    "me\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"COMPLAINT_URL" +
    "\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"fa" +
    "lse\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" " +
    "isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSeri" +
    "alizationIgnore=\"false\" mappingName=\"COMPLAINT_URL\" mappingColumnType=\"System.St" +
    "ring\" sqlType=\"varchar(200)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Pro" +
    "perty name=\"REAL_NAME_PERSON\" type=\"System.String\" isInherited=\"false\" isReadOnl" +
    "y=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey" +
    "=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isInde" +
    "xPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"REAL_NAME_PERSO" +
    "N\" mappingColumnType=\"System.String\" sqlType=\"varchar(200)\" isPrimaryKey=\"false\"" +
    " isNotNull=\"false\" />\r\n    <Property name=\"REAL_NAME_ID_CARD\" type=\"System.Strin" +
    "g\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"fa" +
    "lse\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false" +
    "\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"fal" +
    "se\" mappingName=\"REAL_NAME_ID_CARD\" mappingColumnType=\"System.String\" sqlType=\"v" +
    "archar(50)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"DISTR" +
    "IBUTION_DATE\" type=\"System.Nullable`1[System.DateTime]\" isInherited=\"false\" isRe" +
    "adOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFrie" +
    "ndKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" i" +
    "sIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"DISTRIBUTI" +
    "ON_DATE\" mappingColumnType=\"System.Nullable`1[System.DateTime]\" sqlType=\"datetim" +
    "e\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"CREATED_BY\" ty" +
    "pe=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\"" +
    " isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRe" +
    "lationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializ" +
    "ationIgnore=\"false\" mappingName=\"CREATED_BY\" mappingColumnType=\"System.String\" s" +
    "qlType=\"varchar(36)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property na" +
    "me=\"CREATED_TIME\" type=\"System.Nullable`1[System.DateTime]\" isInherited=\"false\" " +
    "isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" is" +
    "FriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"fals" +
    "e\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"CREATE" +
    "D_TIME\" mappingColumnType=\"System.Nullable`1[System.DateTime]\" sqlType=\"datetime" +
    "\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"LAST_UPDATED_BY" +
    "\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"fa" +
    "lse\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" " +
    "isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSeri" +
    "alizationIgnore=\"false\" mappingName=\"LAST_UPDATED_BY\" mappingColumnType=\"System." +
    "String\" sqlType=\"varchar(36)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Pr" +
    "operty name=\"LAST_UPDATED_TIME\" type=\"System.Nullable`1[System.DateTime]\" isInhe" +
    "rited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQu" +
    "ery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndex" +
    "Property=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappi" +
    "ngName=\"LAST_UPDATED_TIME\" mappingColumnType=\"System.Nullable`1[System.DateTime]" +
    "\" sqlType=\"datetime\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n  </Properties>\r" +
    "\n</EntityConfiguration>")]
    public partial class TB_DATA_CARD : NBear.Common.Entity
    {

        protected static NBear.Common.EntityConfiguration _TB_DATA_CARDEntityConfiguration;

        protected string _CARD_ID;

        protected string _AGENT_ID;

        protected string _END_CUSTOMER_ID;

        protected string _BRAND_ID;

        protected string _CARD_ICCID;

        protected string _CARD_NO;

        protected string _SERVICE_PROVIDER;

        protected global::System.Int32? _STATUS;

        protected global::System.Int32? _IS_COMPLAINT;

        protected global::System.DateTime? _COMPLAINT_DATE;

        protected string _COMPLAINT_URL;

        protected string _REAL_NAME_PERSON;

        protected string _REAL_NAME_ID_CARD;

        protected global::System.DateTime? _DISTRIBUTION_DATE;

        protected string _CREATED_BY;

        protected global::System.DateTime? _CREATED_TIME;

        protected string _LAST_UPDATED_BY;

        protected global::System.DateTime? _LAST_UPDATED_TIME;

        public static @__Columns _ = new @__Columns();

        public static bool operator ==(global::SYSEntity.TB_DATA_CARD left, global::SYSEntity.TB_DATA_CARD right) { return ((object)left) != null ? left.Equals(right) : ((object)right) == null ? true : false; }


        public static bool operator !=(global::SYSEntity.TB_DATA_CARD left, global::SYSEntity.TB_DATA_CARD right) { return ((object)left) != null ? !left.Equals(right) : ((object)right) == null ? false : true; }



        public string CARD_ID
        {
            get
            {
                return this._CARD_ID;
            }
            set
            {
                this.OnPropertyChanged("CARD_ID", this._CARD_ID, value);
                this._CARD_ID = value;
            }
        }

        public string AGENT_ID
        {
            get
            {
                return this._AGENT_ID;
            }
            set
            {
                this.OnPropertyChanged("AGENT_ID", this._AGENT_ID, value);
                this._AGENT_ID = value;
            }
        }

        public string END_CUSTOMER_ID
        {
            get
            {
                return this._END_CUSTOMER_ID;
            }
            set
            {
                this.OnPropertyChanged("AGENT_ACCOUNT", this._END_CUSTOMER_ID, value);
                this._END_CUSTOMER_ID = value;
            }
        }

        public string BRAND_ID
        {
            get
            {
                return this._BRAND_ID;
            }
            set
            {
                this.OnPropertyChanged("BRAND_ID", this._BRAND_ID, value);
                this._BRAND_ID = value;
            }
        }

        public string CARD_ICCID
        {
            get
            {
                return this._CARD_ICCID;
            }
            set
            {
                this.OnPropertyChanged("CARD_ICCID", this._CARD_ICCID, value);
                this._CARD_ICCID = value;
            }
        }

        public string CARD_NO
        {
            get
            {
                return this._CARD_NO;
            }
            set
            {
                this.OnPropertyChanged("CARD_NO", this._CARD_NO, value);
                this._CARD_NO = value;
            }
        }

        public string SERVICE_PROVIDER
        {
            get
            {
                return this._SERVICE_PROVIDER;
            }
            set
            {
                this.OnPropertyChanged("SERVICE_PROVIDER", this._SERVICE_PROVIDER, value);
                this._SERVICE_PROVIDER = value;
            }
        }

        public global::System.Int32? STATUS
        {
            get
            {
                return this._STATUS;
            }
            set
            {
                this.OnPropertyChanged("STATUS", this._STATUS, value);
                this._STATUS = value;
            }
        }

        public global::System.Int32? IS_COMPLAINT
        {
            get
            {
                return this._IS_COMPLAINT;
            }
            set
            {
                this.OnPropertyChanged("IS_COMPLAINT", this._IS_COMPLAINT, value);
                this._IS_COMPLAINT = value;
            }
        }

        public global::System.DateTime? COMPLAINT_DATE
        {
            get
            {
                return this._COMPLAINT_DATE;
            }
            set
            {
                this.OnPropertyChanged("COMPLAINT_DATE", this._COMPLAINT_DATE, value);
                this._COMPLAINT_DATE = value;
            }
        }

        public string COMPLAINT_URL
        {
            get
            {
                return this._COMPLAINT_URL;
            }
            set
            {
                this.OnPropertyChanged("COMPLAINT_URL", this._COMPLAINT_URL, value);
                this._COMPLAINT_URL = value;
            }
        }

        public string REAL_NAME_PERSON
        {
            get
            {
                return this._REAL_NAME_PERSON;
            }
            set
            {
                this.OnPropertyChanged("REAL_NAME_PERSON", this._REAL_NAME_PERSON, value);
                this._REAL_NAME_PERSON = value;
            }
        }

        public string REAL_NAME_ID_CARD
        {
            get
            {
                return this._REAL_NAME_ID_CARD;
            }
            set
            {
                this.OnPropertyChanged("REAL_NAME_ID_CARD", this._REAL_NAME_ID_CARD, value);
                this._REAL_NAME_ID_CARD = value;
            }
        }

        public global::System.DateTime? DISTRIBUTION_DATE
        {
            get
            {
                return this._DISTRIBUTION_DATE;
            }
            set
            {
                this.OnPropertyChanged("DISTRIBUTION_DATE", this._DISTRIBUTION_DATE, value);
                this._DISTRIBUTION_DATE = value;
            }
        }

        public string CREATED_BY
        {
            get
            {
                return this._CREATED_BY;
            }
            set
            {
                this.OnPropertyChanged("CREATED_BY", this._CREATED_BY, value);
                this._CREATED_BY = value;
            }
        }

        public global::System.DateTime? CREATED_TIME
        {
            get
            {
                return this._CREATED_TIME;
            }
            set
            {
                this.OnPropertyChanged("CREATED_TIME", this._CREATED_TIME, value);
                this._CREATED_TIME = value;
            }
        }

        public string LAST_UPDATED_BY
        {
            get
            {
                return this._LAST_UPDATED_BY;
            }
            set
            {
                this.OnPropertyChanged("LAST_UPDATED_BY", this._LAST_UPDATED_BY, value);
                this._LAST_UPDATED_BY = value;
            }
        }

        public global::System.DateTime? LAST_UPDATED_TIME
        {
            get
            {
                return this._LAST_UPDATED_TIME;
            }
            set
            {
                this.OnPropertyChanged("LAST_UPDATED_TIME", this._LAST_UPDATED_TIME, value);
                this._LAST_UPDATED_TIME = value;
            }
        }

        public override NBear.Common.EntityConfiguration GetEntityConfiguration()
        {
            if ((TB_DATA_CARD._TB_DATA_CARDEntityConfiguration == null))
            {
                TB_DATA_CARD._TB_DATA_CARDEntityConfiguration = NBear.Common.MetaDataManager.GetEntityConfiguration("SYSEntity.TB_DATA_CARD");
            }
            return TB_DATA_CARD._TB_DATA_CARDEntityConfiguration;
        }

        public override void ReloadQueries(bool includeLazyLoadQueries)
        {
        }

        public override object[] GetPropertyValues()
        {
            return new object[] {
                        this._CARD_ID,
                        this._AGENT_ID,
                        this._END_CUSTOMER_ID,
                        this._BRAND_ID,
                        this._CARD_ICCID,
                        this._CARD_NO,
                        this._SERVICE_PROVIDER,
                        this._STATUS,
                        this._IS_COMPLAINT,
                        this._COMPLAINT_DATE,
                        this._COMPLAINT_URL,
                        this._REAL_NAME_PERSON,
                        this._REAL_NAME_ID_CARD,
                        this._DISTRIBUTION_DATE,
                        this._CREATED_BY,
                        this._CREATED_TIME,
                        this._LAST_UPDATED_BY,
                        this._LAST_UPDATED_TIME};
        }

        public override void SetPropertyValues(System.Data.IDataReader reader)
        {
            if ((false == reader.IsDBNull(0)))
            {
                this._CARD_ID = reader.GetString(0);
            }
            if ((false == reader.IsDBNull(1)))
            {
                this._AGENT_ID = reader.GetString(1);
            }
            if ((false == reader.IsDBNull(2)))
            {
                this._END_CUSTOMER_ID = reader.GetString(2);
            }
            if ((false == reader.IsDBNull(3)))
            {
                this._BRAND_ID = reader.GetString(3);
            }
            if ((false == reader.IsDBNull(4)))
            {
                this._CARD_ICCID = reader.GetString(4);
            }
            if ((false == reader.IsDBNull(5)))
            {
                this._CARD_NO = reader.GetString(5);
            }
            if ((false == reader.IsDBNull(6)))
            {
                this._SERVICE_PROVIDER = reader.GetString(6);
            }
            if ((false == reader.IsDBNull(7)))
            {
                this._STATUS = reader.GetInt32(7);
            }
            if ((false == reader.IsDBNull(8)))
            {
                this._IS_COMPLAINT = reader.GetInt32(8);
            }
            if ((false == reader.IsDBNull(9)))
            {
                this._COMPLAINT_DATE = this.GetDateTime(reader, 9);
            }
            if ((false == reader.IsDBNull(10)))
            {
                this._COMPLAINT_URL = reader.GetString(10);
            }
            if ((false == reader.IsDBNull(11)))
            {
                this._REAL_NAME_PERSON = reader.GetString(11);
            }
            if ((false == reader.IsDBNull(12)))
            {
                this._REAL_NAME_ID_CARD = reader.GetString(12);
            }
            if ((false == reader.IsDBNull(13)))
            {
                this._DISTRIBUTION_DATE = this.GetDateTime(reader, 13);
            }
            if ((false == reader.IsDBNull(14)))
            {
                this._CREATED_BY = reader.GetString(14);
            }
            if ((false == reader.IsDBNull(15)))
            {
                this._CREATED_TIME = this.GetDateTime(reader, 15);
            }
            if ((false == reader.IsDBNull(16)))
            {
                this._LAST_UPDATED_BY = reader.GetString(16);
            }
            if ((false == reader.IsDBNull(17)))
            {
                this._LAST_UPDATED_TIME = this.GetDateTime(reader, 17);
            }
            this.ReloadQueries(false);
        }

        public override void SetPropertyValues(System.Data.DataRow row)
        {
            if ((false == row.IsNull(0)))
            {
                this._CARD_ID = ((string)(row[0]));
            }
            if ((false == row.IsNull(1)))
            {
                this._AGENT_ID = ((string)(row[1]));
            }
            if ((false == row.IsNull(2)))
            {
                this._END_CUSTOMER_ID = ((string)(row[2]));
            }
            if ((false == row.IsNull(3)))
            {
                this._BRAND_ID = ((string)(row[3]));
            }
            if ((false == row.IsNull(4)))
            {
                this._CARD_ICCID = ((string)(row[4]));
            }
            if ((false == row.IsNull(5)))
            {
                this._CARD_NO = ((string)(row[5]));
            }
            if ((false == row.IsNull(6)))
            {
                this._SERVICE_PROVIDER = ((string)(row[6]));
            }
            if ((false == row.IsNull(7)))
            {
                this._STATUS = ((System.Nullable<int>)(row[7]));
            }
            if ((false == row.IsNull(8)))
            {
                this._IS_COMPLAINT = ((System.Nullable<int>)(row[8]));
            }
            if ((false == row.IsNull(9)))
            {
                this._COMPLAINT_DATE = this.GetDateTime(row, 9);
            }
            if ((false == row.IsNull(10)))
            {
                this._COMPLAINT_URL = ((string)(row[10]));
            }
            if ((false == row.IsNull(11)))
            {
                this._REAL_NAME_PERSON = ((string)(row[11]));
            }
            if ((false == row.IsNull(12)))
            {
                this._REAL_NAME_ID_CARD = ((string)(row[12]));
            }
            if ((false == row.IsNull(13)))
            {
                this._DISTRIBUTION_DATE = this.GetDateTime(row, 13);
            }
            if ((false == row.IsNull(14)))
            {
                this._CREATED_BY = ((string)(row[14]));
            }
            if ((false == row.IsNull(15)))
            {
                this._CREATED_TIME = this.GetDateTime(row, 15);
            }
            if ((false == row.IsNull(16)))
            {
                this._LAST_UPDATED_BY = ((string)(row[16]));
            }
            if ((false == row.IsNull(17)))
            {
                this._LAST_UPDATED_TIME = this.GetDateTime(row, 17);
            }
            this.ReloadQueries(false);
        }

        public override int GetHashCode()
        {
            return base.GetHashCode();
        }

        public override bool Equals(object obj)
        {
            if ((obj == null))
            {
                return false;
            }
            if ((false == typeof(global::SYSEntity.TB_DATA_CARD).IsAssignableFrom(obj.GetType())))
            {
                return false;
            }
            if ((((object)(this)) == ((object)(obj))))
            {
                return true;
            }
            return ((this.isAttached && ((global::SYSEntity.TB_DATA_CARD)(obj)).isAttached)
                        && (this.CARD_ID == ((global::SYSEntity.TB_DATA_CARD)(obj)).CARD_ID));
        }

        public static @__Columns @__Alias(string aliasName)
        {
            return new @__Columns(aliasName);
        }

        public class @__Columns
        {

            protected string aliasName;

            protected NBear.Common.PropertyItem _CARD_ID = new NBear.Common.PropertyItem("CARD_ID", "SYSEntity.TB_DATA_CARD");

            protected NBear.Common.PropertyItem _AGENT_ID = new NBear.Common.PropertyItem("AGENT_ID", "SYSEntity.TB_DATA_CARD");

            protected NBear.Common.PropertyItem _AGENT_ACCOUNT = new NBear.Common.PropertyItem("AGENT_ACCOUNT", "SYSEntity.TB_DATA_CARD");

            protected NBear.Common.PropertyItem _BRAND_ID = new NBear.Common.PropertyItem("BRAND_ID", "SYSEntity.TB_DATA_CARD");

            protected NBear.Common.PropertyItem _CARD_ICCID = new NBear.Common.PropertyItem("CARD_ICCID", "SYSEntity.TB_DATA_CARD");

            protected NBear.Common.PropertyItem _CARD_NO = new NBear.Common.PropertyItem("CARD_NO", "SYSEntity.TB_DATA_CARD");

            protected NBear.Common.PropertyItem _SERVICE_PROVIDER = new NBear.Common.PropertyItem("SERVICE_PROVIDER", "SYSEntity.TB_DATA_CARD");

            protected NBear.Common.PropertyItem _STATUS = new NBear.Common.PropertyItem("STATUS", "SYSEntity.TB_DATA_CARD");

            protected NBear.Common.PropertyItem _IS_COMPLAINT = new NBear.Common.PropertyItem("IS_COMPLAINT", "SYSEntity.TB_DATA_CARD");

            protected NBear.Common.PropertyItem _COMPLAINT_DATE = new NBear.Common.PropertyItem("COMPLAINT_DATE", "SYSEntity.TB_DATA_CARD");

            protected NBear.Common.PropertyItem _COMPLAINT_URL = new NBear.Common.PropertyItem("COMPLAINT_URL", "SYSEntity.TB_DATA_CARD");

            protected NBear.Common.PropertyItem _REAL_NAME_PERSON = new NBear.Common.PropertyItem("REAL_NAME_PERSON", "SYSEntity.TB_DATA_CARD");

            protected NBear.Common.PropertyItem _REAL_NAME_ID_CARD = new NBear.Common.PropertyItem("REAL_NAME_ID_CARD", "SYSEntity.TB_DATA_CARD");

            protected NBear.Common.PropertyItem _DISTRIBUTION_DATE = new NBear.Common.PropertyItem("DISTRIBUTION_DATE", "SYSEntity.TB_DATA_CARD");

            protected NBear.Common.PropertyItem _CREATED_BY = new NBear.Common.PropertyItem("CREATED_BY", "SYSEntity.TB_DATA_CARD");

            protected NBear.Common.PropertyItem _CREATED_TIME = new NBear.Common.PropertyItem("CREATED_TIME", "SYSEntity.TB_DATA_CARD");

            protected NBear.Common.PropertyItem _LAST_UPDATED_BY = new NBear.Common.PropertyItem("LAST_UPDATED_BY", "SYSEntity.TB_DATA_CARD");

            protected NBear.Common.PropertyItem _LAST_UPDATED_TIME = new NBear.Common.PropertyItem("LAST_UPDATED_TIME", "SYSEntity.TB_DATA_CARD");

            public @__Columns()
            {
            }

            public @__Columns(string aliasName)
            {
                this.aliasName = aliasName;
            }

            public NBear.Common.PropertyItem CARD_ID
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _CARD_ID;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("CARD_ID", _CARD_ID.EntityConfiguration, _CARD_ID.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem AGENT_ID
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _AGENT_ID;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("AGENT_ID", _AGENT_ID.EntityConfiguration, _AGENT_ID.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem AGENT_ACCOUNT
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _AGENT_ACCOUNT;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("AGENT_ACCOUNT", _AGENT_ACCOUNT.EntityConfiguration, _AGENT_ACCOUNT.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem BRAND_ID
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _BRAND_ID;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("BRAND_ID", _BRAND_ID.EntityConfiguration, _BRAND_ID.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem CARD_ICCID
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _CARD_ICCID;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("CARD_ICCID", _CARD_ICCID.EntityConfiguration, _CARD_ICCID.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem CARD_NO
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _CARD_NO;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("CARD_NO", _CARD_NO.EntityConfiguration, _CARD_NO.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem SERVICE_PROVIDER
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _SERVICE_PROVIDER;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("SERVICE_PROVIDER", _SERVICE_PROVIDER.EntityConfiguration, _SERVICE_PROVIDER.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem STATUS
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _STATUS;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("STATUS", _STATUS.EntityConfiguration, _STATUS.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem IS_COMPLAINT
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _IS_COMPLAINT;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("IS_COMPLAINT", _IS_COMPLAINT.EntityConfiguration, _IS_COMPLAINT.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem COMPLAINT_DATE
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _COMPLAINT_DATE;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("COMPLAINT_DATE", _COMPLAINT_DATE.EntityConfiguration, _COMPLAINT_DATE.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem COMPLAINT_URL
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _COMPLAINT_URL;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("COMPLAINT_URL", _COMPLAINT_URL.EntityConfiguration, _COMPLAINT_URL.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem REAL_NAME_PERSON
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _REAL_NAME_PERSON;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("REAL_NAME_PERSON", _REAL_NAME_PERSON.EntityConfiguration, _REAL_NAME_PERSON.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem REAL_NAME_ID_CARD
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _REAL_NAME_ID_CARD;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("REAL_NAME_ID_CARD", _REAL_NAME_ID_CARD.EntityConfiguration, _REAL_NAME_ID_CARD.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem DISTRIBUTION_DATE
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _DISTRIBUTION_DATE;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("DISTRIBUTION_DATE", _DISTRIBUTION_DATE.EntityConfiguration, _DISTRIBUTION_DATE.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem CREATED_BY
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _CREATED_BY;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("CREATED_BY", _CREATED_BY.EntityConfiguration, _CREATED_BY.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem CREATED_TIME
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _CREATED_TIME;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("CREATED_TIME", _CREATED_TIME.EntityConfiguration, _CREATED_TIME.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem LAST_UPDATED_BY
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _LAST_UPDATED_BY;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("LAST_UPDATED_BY", _LAST_UPDATED_BY.EntityConfiguration, _LAST_UPDATED_BY.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem LAST_UPDATED_TIME
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _LAST_UPDATED_TIME;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("LAST_UPDATED_TIME", _LAST_UPDATED_TIME.EntityConfiguration, _LAST_UPDATED_TIME.PropertyConfiguration, aliasName);
                    }
                }
            }
        }
    }
}
namespace SYSEntity
{
    using System;
    using System.Xml.Serialization;
    using NBear.Common;


    [System.SerializableAttribute()]
    public partial class TB_DATA_END_CUSTOMERArrayList : NBear.Common.EntityArrayList<SYSEntity.TB_DATA_END_CUSTOMER>
    {
    }

    [System.SerializableAttribute()]
    [NBear.Common.EmbeddedEntityConfigurationAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<EntityConfiguration xmlns:xsd=\"http://w" +
    "ww.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" " +
    "name=\"SYSEntity.TB_DATA_END_CUSTOMER\" isReadOnly=\"false\" isAutoPreLoad=\"false\" i" +
    "sBatchUpdate=\"false\" isRelation=\"false\" mappingName=\"TB_DATA_END_CUSTOMER\" batch" +
    "Size=\"10\">\r\n  <Properties>\r\n    <Property name=\"END_CUSTOMER_ID\" type=\"System.St" +
    "ring\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=" +
    "\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"fa" +
    "lse\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"" +
    "false\" mappingName=\"END_CUSTOMER_ID\" mappingColumnType=\"System.String\" sqlType=\"" +
    "varchar(36)\" isPrimaryKey=\"true\" isNotNull=\"true\" />\r\n    <Property name=\"USER_I" +
    "D\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"f" +
    "alse\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\"" +
    " isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSer" +
    "ializationIgnore=\"false\" mappingName=\"USER_ID\" mappingColumnType=\"System.String\"" +
    " sqlType=\"varchar(36)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property " +
    "name=\"AGENT_ID\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCo" +
    "mpoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLaz" +
    "yLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=" +
    "\"false\" isSerializationIgnore=\"false\" mappingName=\"AGENT_ID\" mappingColumnType=\"" +
    "System.String\" sqlType=\"varchar(36)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n" +
    "    <Property name=\"END_CUSTOMER_NAME\" type=\"System.String\" isInherited=\"false\" " +
    "isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" is" +
    "FriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"fals" +
    "e\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"END_CU" +
    "STOMER_NAME\" mappingColumnType=\"System.String\" sqlType=\"varchar(100)\" isPrimaryK" +
    "ey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"END_CUSTOMER_INDUSTRY\" type" +
    "=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" i" +
    "sContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRela" +
    "tionKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializat" +
    "ionIgnore=\"false\" mappingName=\"END_CUSTOMER_INDUSTRY\" mappingColumnType=\"System." +
    "String\" sqlType=\"varchar(100)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <P" +
    "roperty name=\"END_CUSTOMER_CARD_NUMBER\" type=\"System.Nullable`1[System.Decimal]\"" +
    " isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"fals" +
    "e\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" " +
    "isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false" +
    "\" mappingName=\"END_CUSTOMER_CARD_NUMBER\" mappingColumnType=\"System.Nullable`1[Sy" +
    "stem.Decimal]\" sqlType=\"decimal\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    " +
    "<Property name=\"STATUS\" type=\"System.Nullable`1[System.Int32]\" isInherited=\"fals" +
    "e\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\"" +
    " isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"f" +
    "alse\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"STA" +
    "TUS\" mappingColumnType=\"System.Nullable`1[System.Int32]\" sqlType=\"int\" isPrimary" +
    "Key=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"CREATED_BY\" type=\"System.S" +
    "tring\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained" +
    "=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"f" +
    "alse\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=" +
    "\"false\" mappingName=\"CREATED_BY\" mappingColumnType=\"System.String\" sqlType=\"varc" +
    "har(36)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"CREATED_" +
    "TIME\" type=\"System.Nullable`1[System.DateTime]\" isInherited=\"false\" isReadOnly=\"" +
    "false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"f" +
    "alse\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPr" +
    "opertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"CREATED_TIME\" mapp" +
    "ingColumnType=\"System.Nullable`1[System.DateTime]\" sqlType=\"datetime\" isPrimaryK" +
    "ey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"LAST_UPDATED_BY\" type=\"Syst" +
    "em.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isConta" +
    "ined=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKe" +
    "y=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgn" +
    "ore=\"false\" mappingName=\"LAST_UPDATED_BY\" mappingColumnType=\"System.String\" sqlT" +
    "ype=\"varchar(36)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=" +
    "\"LAST_UPDATED_TIME\" type=\"System.Nullable`1[System.DateTime]\" isInherited=\"false" +
    "\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" " +
    "isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"fa" +
    "lse\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"LAST" +
    "_UPDATED_TIME\" mappingColumnType=\"System.Nullable`1[System.DateTime]\" sqlType=\"d" +
    "atetime\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n  </Properties>\r\n</EntityCon" +
    "figuration>")]
    public partial class TB_DATA_END_CUSTOMER : NBear.Common.Entity
    {

        protected static NBear.Common.EntityConfiguration _TB_DATA_END_CUSTOMEREntityConfiguration;

        protected string _END_CUSTOMER_ID;

        protected string _USER_ID;

        protected string _AGENT_ID;

        protected string _END_CUSTOMER_NAME;

        protected string _END_CUSTOMER_INDUSTRY;

        protected global::System.Decimal? _END_CUSTOMER_CARD_NUMBER;

        protected global::System.Int32? _STATUS;

        protected string _CREATED_BY;

        protected global::System.DateTime? _CREATED_TIME;

        protected string _LAST_UPDATED_BY;

        protected global::System.DateTime? _LAST_UPDATED_TIME;

        public static @__Columns _ = new @__Columns();

        public static bool operator ==(global::SYSEntity.TB_DATA_END_CUSTOMER left, global::SYSEntity.TB_DATA_END_CUSTOMER right) { return ((object)left) != null ? left.Equals(right) : ((object)right) == null ? true : false; }


        public static bool operator !=(global::SYSEntity.TB_DATA_END_CUSTOMER left, global::SYSEntity.TB_DATA_END_CUSTOMER right) { return ((object)left) != null ? !left.Equals(right) : ((object)right) == null ? false : true; }



        public string END_CUSTOMER_ID
        {
            get
            {
                return this._END_CUSTOMER_ID;
            }
            set
            {
                this.OnPropertyChanged("END_CUSTOMER_ID", this._END_CUSTOMER_ID, value);
                this._END_CUSTOMER_ID = value;
            }
        }

        public string USER_ID
        {
            get
            {
                return this._USER_ID;
            }
            set
            {
                this.OnPropertyChanged("USER_ID", this._USER_ID, value);
                this._USER_ID = value;
            }
        }

        public string AGENT_ID
        {
            get
            {
                return this._AGENT_ID;
            }
            set
            {
                this.OnPropertyChanged("AGENT_ID", this._AGENT_ID, value);
                this._AGENT_ID = value;
            }
        }

        public string END_CUSTOMER_NAME
        {
            get
            {
                return this._END_CUSTOMER_NAME;
            }
            set
            {
                this.OnPropertyChanged("END_CUSTOMER_NAME", this._END_CUSTOMER_NAME, value);
                this._END_CUSTOMER_NAME = value;
            }
        }

        public string END_CUSTOMER_INDUSTRY
        {
            get
            {
                return this._END_CUSTOMER_INDUSTRY;
            }
            set
            {
                this.OnPropertyChanged("END_CUSTOMER_INDUSTRY", this._END_CUSTOMER_INDUSTRY, value);
                this._END_CUSTOMER_INDUSTRY = value;
            }
        }

        public global::System.Decimal? END_CUSTOMER_CARD_NUMBER
        {
            get
            {
                return this._END_CUSTOMER_CARD_NUMBER;
            }
            set
            {
                this.OnPropertyChanged("END_CUSTOMER_CARD_NUMBER", this._END_CUSTOMER_CARD_NUMBER, value);
                this._END_CUSTOMER_CARD_NUMBER = value;
            }
        }

        public global::System.Int32? STATUS
        {
            get
            {
                return this._STATUS;
            }
            set
            {
                this.OnPropertyChanged("STATUS", this._STATUS, value);
                this._STATUS = value;
            }
        }

        public string CREATED_BY
        {
            get
            {
                return this._CREATED_BY;
            }
            set
            {
                this.OnPropertyChanged("CREATED_BY", this._CREATED_BY, value);
                this._CREATED_BY = value;
            }
        }

        public global::System.DateTime? CREATED_TIME
        {
            get
            {
                return this._CREATED_TIME;
            }
            set
            {
                this.OnPropertyChanged("CREATED_TIME", this._CREATED_TIME, value);
                this._CREATED_TIME = value;
            }
        }

        public string LAST_UPDATED_BY
        {
            get
            {
                return this._LAST_UPDATED_BY;
            }
            set
            {
                this.OnPropertyChanged("LAST_UPDATED_BY", this._LAST_UPDATED_BY, value);
                this._LAST_UPDATED_BY = value;
            }
        }

        public global::System.DateTime? LAST_UPDATED_TIME
        {
            get
            {
                return this._LAST_UPDATED_TIME;
            }
            set
            {
                this.OnPropertyChanged("LAST_UPDATED_TIME", this._LAST_UPDATED_TIME, value);
                this._LAST_UPDATED_TIME = value;
            }
        }

        public override NBear.Common.EntityConfiguration GetEntityConfiguration()
        {
            if ((TB_DATA_END_CUSTOMER._TB_DATA_END_CUSTOMEREntityConfiguration == null))
            {
                TB_DATA_END_CUSTOMER._TB_DATA_END_CUSTOMEREntityConfiguration = NBear.Common.MetaDataManager.GetEntityConfiguration("SYSEntity.TB_DATA_END_CUSTOMER");
            }
            return TB_DATA_END_CUSTOMER._TB_DATA_END_CUSTOMEREntityConfiguration;
        }

        public override void ReloadQueries(bool includeLazyLoadQueries)
        {
        }

        public override object[] GetPropertyValues()
        {
            return new object[] {
                        this._END_CUSTOMER_ID,
                        this._USER_ID,
                        this._AGENT_ID,
                        this._END_CUSTOMER_NAME,
                        this._END_CUSTOMER_INDUSTRY,
                        this._END_CUSTOMER_CARD_NUMBER,
                        this._STATUS,
                        this._CREATED_BY,
                        this._CREATED_TIME,
                        this._LAST_UPDATED_BY,
                        this._LAST_UPDATED_TIME};
        }

        public override void SetPropertyValues(System.Data.IDataReader reader)
        {
            if ((false == reader.IsDBNull(0)))
            {
                this._END_CUSTOMER_ID = reader.GetString(0);
            }
            if ((false == reader.IsDBNull(1)))
            {
                this._USER_ID = reader.GetString(1);
            }
            if ((false == reader.IsDBNull(2)))
            {
                this._AGENT_ID = reader.GetString(2);
            }
            if ((false == reader.IsDBNull(3)))
            {
                this._END_CUSTOMER_NAME = reader.GetString(3);
            }
            if ((false == reader.IsDBNull(4)))
            {
                this._END_CUSTOMER_INDUSTRY = reader.GetString(4);
            }
            if ((false == reader.IsDBNull(5)))
            {
                this._END_CUSTOMER_CARD_NUMBER = reader.GetDecimal(5);
            }
            if ((false == reader.IsDBNull(6)))
            {
                this._STATUS = reader.GetInt32(6);
            }
            if ((false == reader.IsDBNull(7)))
            {
                this._CREATED_BY = reader.GetString(7);
            }
            if ((false == reader.IsDBNull(8)))
            {
                this._CREATED_TIME = this.GetDateTime(reader, 8);
            }
            if ((false == reader.IsDBNull(9)))
            {
                this._LAST_UPDATED_BY = reader.GetString(9);
            }
            if ((false == reader.IsDBNull(10)))
            {
                this._LAST_UPDATED_TIME = this.GetDateTime(reader, 10);
            }
            this.ReloadQueries(false);
        }

        public override void SetPropertyValues(System.Data.DataRow row)
        {
            if ((false == row.IsNull(0)))
            {
                this._END_CUSTOMER_ID = ((string)(row[0]));
            }
            if ((false == row.IsNull(1)))
            {
                this._USER_ID = ((string)(row[1]));
            }
            if ((false == row.IsNull(2)))
            {
                this._AGENT_ID = ((string)(row[2]));
            }
            if ((false == row.IsNull(3)))
            {
                this._END_CUSTOMER_NAME = ((string)(row[3]));
            }
            if ((false == row.IsNull(4)))
            {
                this._END_CUSTOMER_INDUSTRY = ((string)(row[4]));
            }
            if ((false == row.IsNull(5)))
            {
                this._END_CUSTOMER_CARD_NUMBER = ((System.Nullable<decimal>)(row[5]));
            }
            if ((false == row.IsNull(6)))
            {
                this._STATUS = ((System.Nullable<int>)(row[6]));
            }
            if ((false == row.IsNull(7)))
            {
                this._CREATED_BY = ((string)(row[7]));
            }
            if ((false == row.IsNull(8)))
            {
                this._CREATED_TIME = this.GetDateTime(row, 8);
            }
            if ((false == row.IsNull(9)))
            {
                this._LAST_UPDATED_BY = ((string)(row[9]));
            }
            if ((false == row.IsNull(10)))
            {
                this._LAST_UPDATED_TIME = this.GetDateTime(row, 10);
            }
            this.ReloadQueries(false);
        }

        public override int GetHashCode()
        {
            return base.GetHashCode();
        }

        public override bool Equals(object obj)
        {
            if ((obj == null))
            {
                return false;
            }
            if ((false == typeof(global::SYSEntity.TB_DATA_END_CUSTOMER).IsAssignableFrom(obj.GetType())))
            {
                return false;
            }
            if ((((object)(this)) == ((object)(obj))))
            {
                return true;
            }
            return ((this.isAttached && ((global::SYSEntity.TB_DATA_END_CUSTOMER)(obj)).isAttached)
                        && (this.END_CUSTOMER_ID == ((global::SYSEntity.TB_DATA_END_CUSTOMER)(obj)).END_CUSTOMER_ID));
        }

        public static @__Columns @__Alias(string aliasName)
        {
            return new @__Columns(aliasName);
        }

        public class @__Columns
        {

            protected string aliasName;

            protected NBear.Common.PropertyItem _END_CUSTOMER_ID = new NBear.Common.PropertyItem("END_CUSTOMER_ID", "SYSEntity.TB_DATA_END_CUSTOMER");

            protected NBear.Common.PropertyItem _USER_ID = new NBear.Common.PropertyItem("USER_ID", "SYSEntity.TB_DATA_END_CUSTOMER");

            protected NBear.Common.PropertyItem _AGENT_ID = new NBear.Common.PropertyItem("AGENT_ID", "SYSEntity.TB_DATA_END_CUSTOMER");

            protected NBear.Common.PropertyItem _END_CUSTOMER_NAME = new NBear.Common.PropertyItem("END_CUSTOMER_NAME", "SYSEntity.TB_DATA_END_CUSTOMER");

            protected NBear.Common.PropertyItem _END_CUSTOMER_INDUSTRY = new NBear.Common.PropertyItem("END_CUSTOMER_INDUSTRY", "SYSEntity.TB_DATA_END_CUSTOMER");

            protected NBear.Common.PropertyItem _END_CUSTOMER_CARD_NUMBER = new NBear.Common.PropertyItem("END_CUSTOMER_CARD_NUMBER", "SYSEntity.TB_DATA_END_CUSTOMER");

            protected NBear.Common.PropertyItem _STATUS = new NBear.Common.PropertyItem("STATUS", "SYSEntity.TB_DATA_END_CUSTOMER");

            protected NBear.Common.PropertyItem _CREATED_BY = new NBear.Common.PropertyItem("CREATED_BY", "SYSEntity.TB_DATA_END_CUSTOMER");

            protected NBear.Common.PropertyItem _CREATED_TIME = new NBear.Common.PropertyItem("CREATED_TIME", "SYSEntity.TB_DATA_END_CUSTOMER");

            protected NBear.Common.PropertyItem _LAST_UPDATED_BY = new NBear.Common.PropertyItem("LAST_UPDATED_BY", "SYSEntity.TB_DATA_END_CUSTOMER");

            protected NBear.Common.PropertyItem _LAST_UPDATED_TIME = new NBear.Common.PropertyItem("LAST_UPDATED_TIME", "SYSEntity.TB_DATA_END_CUSTOMER");

            public @__Columns()
            {
            }

            public @__Columns(string aliasName)
            {
                this.aliasName = aliasName;
            }

            public NBear.Common.PropertyItem END_CUSTOMER_ID
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _END_CUSTOMER_ID;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("END_CUSTOMER_ID", _END_CUSTOMER_ID.EntityConfiguration, _END_CUSTOMER_ID.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem USER_ID
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _USER_ID;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("USER_ID", _USER_ID.EntityConfiguration, _USER_ID.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem AGENT_ID
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _AGENT_ID;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("AGENT_ID", _AGENT_ID.EntityConfiguration, _AGENT_ID.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem END_CUSTOMER_NAME
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _END_CUSTOMER_NAME;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("END_CUSTOMER_NAME", _END_CUSTOMER_NAME.EntityConfiguration, _END_CUSTOMER_NAME.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem END_CUSTOMER_INDUSTRY
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _END_CUSTOMER_INDUSTRY;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("END_CUSTOMER_INDUSTRY", _END_CUSTOMER_INDUSTRY.EntityConfiguration, _END_CUSTOMER_INDUSTRY.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem END_CUSTOMER_CARD_NUMBER
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _END_CUSTOMER_CARD_NUMBER;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("END_CUSTOMER_CARD_NUMBER", _END_CUSTOMER_CARD_NUMBER.EntityConfiguration, _END_CUSTOMER_CARD_NUMBER.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem STATUS
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _STATUS;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("STATUS", _STATUS.EntityConfiguration, _STATUS.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem CREATED_BY
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _CREATED_BY;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("CREATED_BY", _CREATED_BY.EntityConfiguration, _CREATED_BY.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem CREATED_TIME
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _CREATED_TIME;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("CREATED_TIME", _CREATED_TIME.EntityConfiguration, _CREATED_TIME.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem LAST_UPDATED_BY
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _LAST_UPDATED_BY;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("LAST_UPDATED_BY", _LAST_UPDATED_BY.EntityConfiguration, _LAST_UPDATED_BY.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem LAST_UPDATED_TIME
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _LAST_UPDATED_TIME;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("LAST_UPDATED_TIME", _LAST_UPDATED_TIME.EntityConfiguration, _LAST_UPDATED_TIME.PropertyConfiguration, aliasName);
                    }
                }
            }
        }
    }
}
namespace SYSEntity
{
    using System;
    using System.Xml.Serialization;
    using NBear.Common;


    [System.SerializableAttribute()]
    public partial class TB_DATA_RECHARGEArrayList : NBear.Common.EntityArrayList<SYSEntity.TB_DATA_RECHARGE>
    {
    }

    [System.SerializableAttribute()]
    [NBear.Common.EmbeddedEntityConfigurationAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<EntityConfiguration xmlns:xsd=\"http://w" +
    "ww.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" " +
    "name=\"SYSEntity.TB_DATA_RECHARGE\" isReadOnly=\"false\" isAutoPreLoad=\"false\" isBat" +
    "chUpdate=\"false\" isRelation=\"false\" mappingName=\"TB_DATA_RECHARGE\" batchSize=\"10" +
    "\">\r\n  <Properties>\r\n    <Property name=\"RECHARGE_ID\" type=\"System.String\" isInhe" +
    "rited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQu" +
    "ery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndex" +
    "Property=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappi" +
    "ngName=\"RECHARGE_ID\" mappingColumnType=\"System.String\" sqlType=\"varchar(36)\" isP" +
    "rimaryKey=\"true\" isNotNull=\"true\" />\r\n    <Property name=\"BRAND_ID\" type=\"System" +
    ".String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContain" +
    "ed=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=" +
    "\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnor" +
    "e=\"false\" mappingName=\"BRAND_ID\" mappingColumnType=\"System.String\" sqlType=\"varc" +
    "har(36)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"SERVICE_" +
    "PROVIDER\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompound" +
    "Unit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=" +
    "\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false" +
    "\" isSerializationIgnore=\"false\" mappingName=\"SERVICE_PROVIDER\" mappingColumnType" +
    "=\"System.String\" sqlType=\"varchar(100)\" isPrimaryKey=\"false\" isNotNull=\"false\" /" +
    ">\r\n    <Property name=\"AGEN_ID\" type=\"System.String\" isInherited=\"false\" isReadO" +
    "nly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendK" +
    "ey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIn" +
    "dexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"AGEN_ID\" mapp" +
    "ingColumnType=\"System.String\" sqlType=\"varchar(36)\" isPrimaryKey=\"false\" isNotNu" +
    "ll=\"false\" />\r\n    <Property name=\"CARD_NO\" type=\"System.String\" isInherited=\"fa" +
    "lse\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"fals" +
    "e\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=" +
    "\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"C" +
    "ARD_NO\" mappingColumnType=\"System.String\" sqlType=\"varchar(50)\" isPrimaryKey=\"fa" +
    "lse\" isNotNull=\"false\" />\r\n    <Property name=\"RECHARGE_MONEY\" type=\"System.Null" +
    "able`1[System.Decimal]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"f" +
    "alse\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\"" +
    " isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSer" +
    "ializationIgnore=\"false\" mappingName=\"RECHARGE_MONEY\" mappingColumnType=\"System." +
    "Nullable`1[System.Decimal]\" sqlType=\"decimal\" isPrimaryKey=\"false\" isNotNull=\"fa" +
    "lse\" />\r\n    <Property name=\"RECHARGE_DATE\" type=\"System.Nullable`1[System.DateT" +
    "ime]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=" +
    "\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"fa" +
    "lse\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"" +
    "false\" mappingName=\"RECHARGE_DATE\" mappingColumnType=\"System.Nullable`1[System.D" +
    "ateTime]\" sqlType=\"datetime\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Pro" +
    "perty name=\"PACKAGE_NAME\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"f" +
    "alse\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"fa" +
    "lse\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPro" +
    "pertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"PACKAGE_NAME\" mappi" +
    "ngColumnType=\"System.String\" sqlType=\"varchar(200)\" isPrimaryKey=\"false\" isNotNu" +
    "ll=\"false\" />\r\n    <Property name=\"CREATED_BY\" type=\"System.String\" isInherited=" +
    "\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"f" +
    "alse\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProper" +
    "ty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName" +
    "=\"CREATED_BY\" mappingColumnType=\"System.String\" sqlType=\"varchar(36)\" isPrimaryK" +
    "ey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"CREATED_TIME\" type=\"System." +
    "Nullable`1[System.DateTime]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUn" +
    "it=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"f" +
    "alse\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" " +
    "isSerializationIgnore=\"false\" mappingName=\"CREATED_TIME\" mappingColumnType=\"Syst" +
    "em.Nullable`1[System.DateTime]\" sqlType=\"datetime\" isPrimaryKey=\"false\" isNotNul" +
    "l=\"false\" />\r\n    <Property name=\"LAST_UPDATED_BY\" type=\"System.String\" isInheri" +
    "ted=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuer" +
    "y=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexPr" +
    "operty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mapping" +
    "Name=\"LAST_UPDATED_BY\" mappingColumnType=\"System.String\" sqlType=\"varchar(36)\" i" +
    "sPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"LAST_UPDATED_TIME\"" +
    " type=\"System.Nullable`1[System.DateTime]\" isInherited=\"false\" isReadOnly=\"false" +
    "\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\"" +
    " isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropert" +
    "yDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"LAST_UPDATED_TIME\" mapp" +
    "ingColumnType=\"System.Nullable`1[System.DateTime]\" sqlType=\"datetime\" isPrimaryK" +
    "ey=\"false\" isNotNull=\"false\" />\r\n  </Properties>\r\n</EntityConfiguration>")]
    public partial class TB_DATA_RECHARGE : NBear.Common.Entity
    {

        protected static NBear.Common.EntityConfiguration _TB_DATA_RECHARGEEntityConfiguration;

        protected string _RECHARGE_ID;

        protected string _BRAND_ID;

        protected string _SERVICE_PROVIDER;

        protected string _AGEN_ID;

        protected string _CARD_NO;

        protected global::System.Decimal? _RECHARGE_MONEY;

        protected global::System.DateTime? _RECHARGE_DATE;

        protected string _PACKAGE_NAME;

        protected string _CREATED_BY;

        protected global::System.DateTime? _CREATED_TIME;

        protected string _LAST_UPDATED_BY;

        protected global::System.DateTime? _LAST_UPDATED_TIME;

        public static @__Columns _ = new @__Columns();

        public static bool operator ==(global::SYSEntity.TB_DATA_RECHARGE left, global::SYSEntity.TB_DATA_RECHARGE right) { return ((object)left) != null ? left.Equals(right) : ((object)right) == null ? true : false; }


        public static bool operator !=(global::SYSEntity.TB_DATA_RECHARGE left, global::SYSEntity.TB_DATA_RECHARGE right) { return ((object)left) != null ? !left.Equals(right) : ((object)right) == null ? false : true; }



        public string RECHARGE_ID
        {
            get
            {
                return this._RECHARGE_ID;
            }
            set
            {
                this.OnPropertyChanged("RECHARGE_ID", this._RECHARGE_ID, value);
                this._RECHARGE_ID = value;
            }
        }

        public string BRAND_ID
        {
            get
            {
                return this._BRAND_ID;
            }
            set
            {
                this.OnPropertyChanged("BRAND_ID", this._BRAND_ID, value);
                this._BRAND_ID = value;
            }
        }

        public string SERVICE_PROVIDER
        {
            get
            {
                return this._SERVICE_PROVIDER;
            }
            set
            {
                this.OnPropertyChanged("SERVICE_PROVIDER", this._SERVICE_PROVIDER, value);
                this._SERVICE_PROVIDER = value;
            }
        }

        public string AGEN_ID
        {
            get
            {
                return this._AGEN_ID;
            }
            set
            {
                this.OnPropertyChanged("AGEN_ID", this._AGEN_ID, value);
                this._AGEN_ID = value;
            }
        }

        public string CARD_NO
        {
            get
            {
                return this._CARD_NO;
            }
            set
            {
                this.OnPropertyChanged("CARD_NO", this._CARD_NO, value);
                this._CARD_NO = value;
            }
        }

        public global::System.Decimal? RECHARGE_MONEY
        {
            get
            {
                return this._RECHARGE_MONEY;
            }
            set
            {
                this.OnPropertyChanged("RECHARGE_MONEY", this._RECHARGE_MONEY, value);
                this._RECHARGE_MONEY = value;
            }
        }

        public global::System.DateTime? RECHARGE_DATE
        {
            get
            {
                return this._RECHARGE_DATE;
            }
            set
            {
                this.OnPropertyChanged("RECHARGE_DATE", this._RECHARGE_DATE, value);
                this._RECHARGE_DATE = value;
            }
        }

        public string PACKAGE_NAME
        {
            get
            {
                return this._PACKAGE_NAME;
            }
            set
            {
                this.OnPropertyChanged("PACKAGE_NAME", this._PACKAGE_NAME, value);
                this._PACKAGE_NAME = value;
            }
        }

        public string CREATED_BY
        {
            get
            {
                return this._CREATED_BY;
            }
            set
            {
                this.OnPropertyChanged("CREATED_BY", this._CREATED_BY, value);
                this._CREATED_BY = value;
            }
        }

        public global::System.DateTime? CREATED_TIME
        {
            get
            {
                return this._CREATED_TIME;
            }
            set
            {
                this.OnPropertyChanged("CREATED_TIME", this._CREATED_TIME, value);
                this._CREATED_TIME = value;
            }
        }

        public string LAST_UPDATED_BY
        {
            get
            {
                return this._LAST_UPDATED_BY;
            }
            set
            {
                this.OnPropertyChanged("LAST_UPDATED_BY", this._LAST_UPDATED_BY, value);
                this._LAST_UPDATED_BY = value;
            }
        }

        public global::System.DateTime? LAST_UPDATED_TIME
        {
            get
            {
                return this._LAST_UPDATED_TIME;
            }
            set
            {
                this.OnPropertyChanged("LAST_UPDATED_TIME", this._LAST_UPDATED_TIME, value);
                this._LAST_UPDATED_TIME = value;
            }
        }

        public override NBear.Common.EntityConfiguration GetEntityConfiguration()
        {
            if ((TB_DATA_RECHARGE._TB_DATA_RECHARGEEntityConfiguration == null))
            {
                TB_DATA_RECHARGE._TB_DATA_RECHARGEEntityConfiguration = NBear.Common.MetaDataManager.GetEntityConfiguration("SYSEntity.TB_DATA_RECHARGE");
            }
            return TB_DATA_RECHARGE._TB_DATA_RECHARGEEntityConfiguration;
        }

        public override void ReloadQueries(bool includeLazyLoadQueries)
        {
        }

        public override object[] GetPropertyValues()
        {
            return new object[] {
                        this._RECHARGE_ID,
                        this._BRAND_ID,
                        this._SERVICE_PROVIDER,
                        this._AGEN_ID,
                        this._CARD_NO,
                        this._RECHARGE_MONEY,
                        this._RECHARGE_DATE,
                        this._PACKAGE_NAME,
                        this._CREATED_BY,
                        this._CREATED_TIME,
                        this._LAST_UPDATED_BY,
                        this._LAST_UPDATED_TIME};
        }

        public override void SetPropertyValues(System.Data.IDataReader reader)
        {
            if ((false == reader.IsDBNull(0)))
            {
                this._RECHARGE_ID = reader.GetString(0);
            }
            if ((false == reader.IsDBNull(1)))
            {
                this._BRAND_ID = reader.GetString(1);
            }
            if ((false == reader.IsDBNull(2)))
            {
                this._SERVICE_PROVIDER = reader.GetString(2);
            }
            if ((false == reader.IsDBNull(3)))
            {
                this._AGEN_ID = reader.GetString(3);
            }
            if ((false == reader.IsDBNull(4)))
            {
                this._CARD_NO = reader.GetString(4);
            }
            if ((false == reader.IsDBNull(5)))
            {
                this._RECHARGE_MONEY = reader.GetDecimal(5);
            }
            if ((false == reader.IsDBNull(6)))
            {
                this._RECHARGE_DATE = this.GetDateTime(reader, 6);
            }
            if ((false == reader.IsDBNull(7)))
            {
                this._PACKAGE_NAME = reader.GetString(7);
            }
            if ((false == reader.IsDBNull(8)))
            {
                this._CREATED_BY = reader.GetString(8);
            }
            if ((false == reader.IsDBNull(9)))
            {
                this._CREATED_TIME = this.GetDateTime(reader, 9);
            }
            if ((false == reader.IsDBNull(10)))
            {
                this._LAST_UPDATED_BY = reader.GetString(10);
            }
            if ((false == reader.IsDBNull(11)))
            {
                this._LAST_UPDATED_TIME = this.GetDateTime(reader, 11);
            }
            this.ReloadQueries(false);
        }

        public override void SetPropertyValues(System.Data.DataRow row)
        {
            if ((false == row.IsNull(0)))
            {
                this._RECHARGE_ID = ((string)(row[0]));
            }
            if ((false == row.IsNull(1)))
            {
                this._BRAND_ID = ((string)(row[1]));
            }
            if ((false == row.IsNull(2)))
            {
                this._SERVICE_PROVIDER = ((string)(row[2]));
            }
            if ((false == row.IsNull(3)))
            {
                this._AGEN_ID = ((string)(row[3]));
            }
            if ((false == row.IsNull(4)))
            {
                this._CARD_NO = ((string)(row[4]));
            }
            if ((false == row.IsNull(5)))
            {
                this._RECHARGE_MONEY = ((System.Nullable<decimal>)(row[5]));
            }
            if ((false == row.IsNull(6)))
            {
                this._RECHARGE_DATE = this.GetDateTime(row, 6);
            }
            if ((false == row.IsNull(7)))
            {
                this._PACKAGE_NAME = ((string)(row[7]));
            }
            if ((false == row.IsNull(8)))
            {
                this._CREATED_BY = ((string)(row[8]));
            }
            if ((false == row.IsNull(9)))
            {
                this._CREATED_TIME = this.GetDateTime(row, 9);
            }
            if ((false == row.IsNull(10)))
            {
                this._LAST_UPDATED_BY = ((string)(row[10]));
            }
            if ((false == row.IsNull(11)))
            {
                this._LAST_UPDATED_TIME = this.GetDateTime(row, 11);
            }
            this.ReloadQueries(false);
        }

        public override int GetHashCode()
        {
            return base.GetHashCode();
        }

        public override bool Equals(object obj)
        {
            if ((obj == null))
            {
                return false;
            }
            if ((false == typeof(global::SYSEntity.TB_DATA_RECHARGE).IsAssignableFrom(obj.GetType())))
            {
                return false;
            }
            if ((((object)(this)) == ((object)(obj))))
            {
                return true;
            }
            return ((this.isAttached && ((global::SYSEntity.TB_DATA_RECHARGE)(obj)).isAttached)
                        && (this.RECHARGE_ID == ((global::SYSEntity.TB_DATA_RECHARGE)(obj)).RECHARGE_ID));
        }

        public static @__Columns @__Alias(string aliasName)
        {
            return new @__Columns(aliasName);
        }

        public class @__Columns
        {

            protected string aliasName;

            protected NBear.Common.PropertyItem _RECHARGE_ID = new NBear.Common.PropertyItem("RECHARGE_ID", "SYSEntity.TB_DATA_RECHARGE");

            protected NBear.Common.PropertyItem _BRAND_ID = new NBear.Common.PropertyItem("BRAND_ID", "SYSEntity.TB_DATA_RECHARGE");

            protected NBear.Common.PropertyItem _SERVICE_PROVIDER = new NBear.Common.PropertyItem("SERVICE_PROVIDER", "SYSEntity.TB_DATA_RECHARGE");

            protected NBear.Common.PropertyItem _AGEN_ID = new NBear.Common.PropertyItem("AGEN_ID", "SYSEntity.TB_DATA_RECHARGE");

            protected NBear.Common.PropertyItem _CARD_NO = new NBear.Common.PropertyItem("CARD_NO", "SYSEntity.TB_DATA_RECHARGE");

            protected NBear.Common.PropertyItem _RECHARGE_MONEY = new NBear.Common.PropertyItem("RECHARGE_MONEY", "SYSEntity.TB_DATA_RECHARGE");

            protected NBear.Common.PropertyItem _RECHARGE_DATE = new NBear.Common.PropertyItem("RECHARGE_DATE", "SYSEntity.TB_DATA_RECHARGE");

            protected NBear.Common.PropertyItem _PACKAGE_NAME = new NBear.Common.PropertyItem("PACKAGE_NAME", "SYSEntity.TB_DATA_RECHARGE");

            protected NBear.Common.PropertyItem _CREATED_BY = new NBear.Common.PropertyItem("CREATED_BY", "SYSEntity.TB_DATA_RECHARGE");

            protected NBear.Common.PropertyItem _CREATED_TIME = new NBear.Common.PropertyItem("CREATED_TIME", "SYSEntity.TB_DATA_RECHARGE");

            protected NBear.Common.PropertyItem _LAST_UPDATED_BY = new NBear.Common.PropertyItem("LAST_UPDATED_BY", "SYSEntity.TB_DATA_RECHARGE");

            protected NBear.Common.PropertyItem _LAST_UPDATED_TIME = new NBear.Common.PropertyItem("LAST_UPDATED_TIME", "SYSEntity.TB_DATA_RECHARGE");

            public @__Columns()
            {
            }

            public @__Columns(string aliasName)
            {
                this.aliasName = aliasName;
            }

            public NBear.Common.PropertyItem RECHARGE_ID
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _RECHARGE_ID;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("RECHARGE_ID", _RECHARGE_ID.EntityConfiguration, _RECHARGE_ID.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem BRAND_ID
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _BRAND_ID;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("BRAND_ID", _BRAND_ID.EntityConfiguration, _BRAND_ID.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem SERVICE_PROVIDER
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _SERVICE_PROVIDER;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("SERVICE_PROVIDER", _SERVICE_PROVIDER.EntityConfiguration, _SERVICE_PROVIDER.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem AGEN_ID
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _AGEN_ID;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("AGEN_ID", _AGEN_ID.EntityConfiguration, _AGEN_ID.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem CARD_NO
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _CARD_NO;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("CARD_NO", _CARD_NO.EntityConfiguration, _CARD_NO.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem RECHARGE_MONEY
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _RECHARGE_MONEY;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("RECHARGE_MONEY", _RECHARGE_MONEY.EntityConfiguration, _RECHARGE_MONEY.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem RECHARGE_DATE
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _RECHARGE_DATE;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("RECHARGE_DATE", _RECHARGE_DATE.EntityConfiguration, _RECHARGE_DATE.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem PACKAGE_NAME
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _PACKAGE_NAME;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("PACKAGE_NAME", _PACKAGE_NAME.EntityConfiguration, _PACKAGE_NAME.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem CREATED_BY
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _CREATED_BY;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("CREATED_BY", _CREATED_BY.EntityConfiguration, _CREATED_BY.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem CREATED_TIME
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _CREATED_TIME;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("CREATED_TIME", _CREATED_TIME.EntityConfiguration, _CREATED_TIME.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem LAST_UPDATED_BY
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _LAST_UPDATED_BY;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("LAST_UPDATED_BY", _LAST_UPDATED_BY.EntityConfiguration, _LAST_UPDATED_BY.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem LAST_UPDATED_TIME
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _LAST_UPDATED_TIME;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("LAST_UPDATED_TIME", _LAST_UPDATED_TIME.EntityConfiguration, _LAST_UPDATED_TIME.PropertyConfiguration, aliasName);
                    }
                }
            }
        }
    }
}
namespace SYSEntity
{
    using System;
    using System.Xml.Serialization;
    using NBear.Common;


    [System.SerializableAttribute()]
    public partial class Xt_zhbArrayList : NBear.Common.EntityArrayList<SYSEntity.Xt_zhb>
    {
    }

    [System.SerializableAttribute()]
    [NBear.Common.EmbeddedEntityConfigurationAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<EntityConfiguration xmlns:xsd=\"http://w" +
    "ww.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" " +
    "name=\"SYSEntity.Xt_zhb\" isReadOnly=\"false\" isAutoPreLoad=\"false\" isBatchUpdate=\"" +
    "false\" isRelation=\"false\" mappingName=\"Xt_zhb\" batchSize=\"10\">\r\n  <Properties>\r\n" +
    "    <Property name=\"Id\" type=\"System.Int32\" isInherited=\"false\" isReadOnly=\"true" +
    "\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\"" +
    " isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropert" +
    "yDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Id\" mappingColumnType=\"" +
    "System.Int32\" sqlType=\"int\" isPrimaryKey=\"true\" isNotNull=\"true\" />\r\n    <Proper" +
    "ty name=\"Zh\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompo" +
    "undUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLo" +
    "ad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"fa" +
    "lse\" isSerializationIgnore=\"false\" mappingName=\"Zh\" mappingColumnType=\"System.St" +
    "ring\" sqlType=\"varchar(50)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Prop" +
    "erty name=\"Mm\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCom" +
    "poundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazy" +
    "Load=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"" +
    "false\" isSerializationIgnore=\"false\" mappingName=\"Mm\" mappingColumnType=\"System." +
    "String\" sqlType=\"varchar(50)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Pr" +
    "operty name=\"Createtime\" type=\"System.DateTime\" isInherited=\"false\" isReadOnly=\"" +
    "false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"f" +
    "alse\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPr" +
    "opertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Createtime\" mappin" +
    "gColumnType=\"System.DateTime\" sqlType=\"datetime\" isPrimaryKey=\"false\" isNotNull=" +
    "\"false\" />\r\n    <Property name=\"Dh\" type=\"System.String\" isInherited=\"false\" isR" +
    "eadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFri" +
    "endKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" " +
    "isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Dh\" mappi" +
    "ngColumnType=\"System.String\" sqlType=\"varchar(50)\" isPrimaryKey=\"false\" isNotNul" +
    "l=\"false\" />\r\n    <Property name=\"Lxr\" type=\"System.String\" isInherited=\"false\" " +
    "isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" is" +
    "FriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"fals" +
    "e\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Lxr\" m" +
    "appingColumnType=\"System.String\" sqlType=\"varchar(50)\" isPrimaryKey=\"false\" isNo" +
    "tNull=\"false\" />\r\n    <Property name=\"Ys\" type=\"System.String\" isInherited=\"fals" +
    "e\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\"" +
    " isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"f" +
    "alse\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Ys\"" +
    " mappingColumnType=\"System.String\" sqlType=\"varchar(50)\" isPrimaryKey=\"false\" is" +
    "NotNull=\"false\" />\r\n    <Property name=\"Yybh\" type=\"System.String\" isInherited=\"" +
    "false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"fa" +
    "lse\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexPropert" +
    "y=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=" +
    "\"Yybh\" mappingColumnType=\"System.String\" sqlType=\"varchar(50)\" isPrimaryKey=\"fal" +
    "se\" isNotNull=\"false\" />\r\n    <Property name=\"Jsid\" type=\"System.Nullable`1[Syst" +
    "em.Int32]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isConta" +
    "ined=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKe" +
    "y=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgn" +
    "ore=\"false\" mappingName=\"Jsid\" mappingColumnType=\"System.Nullable`1[System.Int32" +
    "]\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"" +
    "Lx\" type=\"System.Nullable`1[System.Int32]\" isInherited=\"false\" isReadOnly=\"false" +
    "\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\"" +
    " isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropert" +
    "yDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Lx\" mappingColumnType=\"" +
    "System.Nullable`1[System.Int32]\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"f" +
    "alse\" />\r\n    <Property name=\"Qdid\" type=\"System.Nullable`1[System.Int32]\" isInh" +
    "erited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQ" +
    "uery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isInde" +
    "xProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mapp" +
    "ingName=\"Qdid\" mappingColumnType=\"System.Nullable`1[System.Int32]\" sqlType=\"int\"" +
    " isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Zt\" type=\"System" +
    ".Int32\" isInherited=\"false\" sqlDefaultValue=\"(1)\" isReadOnly=\"false\" isCompoundU" +
    "nit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"" +
    "false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\"" +
    " isSerializationIgnore=\"false\" mappingName=\"Zt\" mappingColumnType=\"System.Int32\"" +
    " sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Bz" +
    "\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"fa" +
    "lse\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" " +
    "isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSeri" +
    "alizationIgnore=\"false\" mappingName=\"Bz\" mappingColumnType=\"System.String\" sqlTy" +
    "pe=\"varchar(200)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=" +
    "\"Txlj\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUni" +
    "t=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"fa" +
    "lse\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" i" +
    "sSerializationIgnore=\"false\" mappingName=\"Txlj\" mappingColumnType=\"System.String" +
    "\" sqlType=\"varchar(100)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n  </Properti" +
    "es>\r\n</EntityConfiguration>")]
    public partial class Xt_zhb : NBear.Common.Entity
    {

        protected static NBear.Common.EntityConfiguration _Xt_zhbEntityConfiguration;

        protected int _Id;

        protected string _Zh;

        protected string _Mm;

        protected global::System.DateTime _Createtime;

        protected string _Dh;

        protected string _Lxr;

        protected string _Ys;

        protected string _Yybh;

        protected global::System.Int32? _Jsid;

        protected global::System.Int32? _Lx;

        protected global::System.Int32? _Qdid;

        protected int _Zt;

        protected string _Bz;

        protected string _Txlj;

        public static @__Columns _ = new @__Columns();

        public static bool operator ==(global::SYSEntity.Xt_zhb left, global::SYSEntity.Xt_zhb right) { return ((object)left) != null ? left.Equals(right) : ((object)right) == null ? true : false; }


        public static bool operator !=(global::SYSEntity.Xt_zhb left, global::SYSEntity.Xt_zhb right) { return ((object)left) != null ? !left.Equals(right) : ((object)right) == null ? false : true; }



        public int Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                this.OnPropertyChanged("Id", this._Id, value);
                this._Id = value;
            }
        }

        public string Zh
        {
            get
            {
                return this._Zh;
            }
            set
            {
                this.OnPropertyChanged("Zh", this._Zh, value);
                this._Zh = value;
            }
        }

        public string Mm
        {
            get
            {
                return this._Mm;
            }
            set
            {
                this.OnPropertyChanged("Mm", this._Mm, value);
                this._Mm = value;
            }
        }

        public global::System.DateTime Createtime
        {
            get
            {
                return this._Createtime;
            }
            set
            {
                this.OnPropertyChanged("Createtime", this._Createtime, value);
                this._Createtime = value;
            }
        }

        public string Dh
        {
            get
            {
                return this._Dh;
            }
            set
            {
                this.OnPropertyChanged("Dh", this._Dh, value);
                this._Dh = value;
            }
        }

        public string Lxr
        {
            get
            {
                return this._Lxr;
            }
            set
            {
                this.OnPropertyChanged("Lxr", this._Lxr, value);
                this._Lxr = value;
            }
        }

        public string Ys
        {
            get
            {
                return this._Ys;
            }
            set
            {
                this.OnPropertyChanged("Ys", this._Ys, value);
                this._Ys = value;
            }
        }

        public string Yybh
        {
            get
            {
                return this._Yybh;
            }
            set
            {
                this.OnPropertyChanged("Yybh", this._Yybh, value);
                this._Yybh = value;
            }
        }

        public global::System.Int32? Jsid
        {
            get
            {
                return this._Jsid;
            }
            set
            {
                this.OnPropertyChanged("Jsid", this._Jsid, value);
                this._Jsid = value;
            }
        }

        public global::System.Int32? Lx
        {
            get
            {
                return this._Lx;
            }
            set
            {
                this.OnPropertyChanged("Lx", this._Lx, value);
                this._Lx = value;
            }
        }

        public global::System.Int32? Qdid
        {
            get
            {
                return this._Qdid;
            }
            set
            {
                this.OnPropertyChanged("Qdid", this._Qdid, value);
                this._Qdid = value;
            }
        }

        public int Zt
        {
            get
            {
                return this._Zt;
            }
            set
            {
                this.OnPropertyChanged("Zt", this._Zt, value);
                this._Zt = value;
            }
        }

        public string Bz
        {
            get
            {
                return this._Bz;
            }
            set
            {
                this.OnPropertyChanged("Bz", this._Bz, value);
                this._Bz = value;
            }
        }

        public string Txlj
        {
            get
            {
                return this._Txlj;
            }
            set
            {
                this.OnPropertyChanged("Txlj", this._Txlj, value);
                this._Txlj = value;
            }
        }

        public override NBear.Common.EntityConfiguration GetEntityConfiguration()
        {
            if ((Xt_zhb._Xt_zhbEntityConfiguration == null))
            {
                Xt_zhb._Xt_zhbEntityConfiguration = NBear.Common.MetaDataManager.GetEntityConfiguration("SYSEntity.Xt_zhb");
            }
            return Xt_zhb._Xt_zhbEntityConfiguration;
        }

        public override void ReloadQueries(bool includeLazyLoadQueries)
        {
        }

        public override object[] GetPropertyValues()
        {
            return new object[] {
                        this._Id,
                        this._Zh,
                        this._Mm,
                        this._Createtime,
                        this._Dh,
                        this._Lxr,
                        this._Ys,
                        this._Yybh,
                        this._Jsid,
                        this._Lx,
                        this._Qdid,
                        this._Zt,
                        this._Bz,
                        this._Txlj};
        }

        public override void SetPropertyValues(System.Data.IDataReader reader)
        {
            if ((false == reader.IsDBNull(0)))
            {
                this._Id = reader.GetInt32(0);
            }
            if ((false == reader.IsDBNull(1)))
            {
                this._Zh = reader.GetString(1);
            }
            if ((false == reader.IsDBNull(2)))
            {
                this._Mm = reader.GetString(2);
            }
            if ((false == reader.IsDBNull(3)))
            {
                this._Createtime = this.GetDateTime(reader, 3);
            }
            if ((false == reader.IsDBNull(4)))
            {
                this._Dh = reader.GetString(4);
            }
            if ((false == reader.IsDBNull(5)))
            {
                this._Lxr = reader.GetString(5);
            }
            if ((false == reader.IsDBNull(6)))
            {
                this._Ys = reader.GetString(6);
            }
            if ((false == reader.IsDBNull(7)))
            {
                this._Yybh = reader.GetString(7);
            }
            if ((false == reader.IsDBNull(8)))
            {
                this._Jsid = reader.GetInt32(8);
            }
            if ((false == reader.IsDBNull(9)))
            {
                this._Lx = reader.GetInt32(9);
            }
            if ((false == reader.IsDBNull(10)))
            {
                this._Qdid = reader.GetInt32(10);
            }
            if ((false == reader.IsDBNull(11)))
            {
                this._Zt = reader.GetInt32(11);
            }
            if ((false == reader.IsDBNull(12)))
            {
                this._Bz = reader.GetString(12);
            }
            if ((false == reader.IsDBNull(13)))
            {
                this._Txlj = reader.GetString(13);
            }
            this.ReloadQueries(false);
        }

        public override void SetPropertyValues(System.Data.DataRow row)
        {
            if ((false == row.IsNull(0)))
            {
                this._Id = ((int)(row[0]));
            }
            if ((false == row.IsNull(1)))
            {
                this._Zh = ((string)(row[1]));
            }
            if ((false == row.IsNull(2)))
            {
                this._Mm = ((string)(row[2]));
            }
            if ((false == row.IsNull(3)))
            {
                this._Createtime = this.GetDateTime(row, 3);
            }
            if ((false == row.IsNull(4)))
            {
                this._Dh = ((string)(row[4]));
            }
            if ((false == row.IsNull(5)))
            {
                this._Lxr = ((string)(row[5]));
            }
            if ((false == row.IsNull(6)))
            {
                this._Ys = ((string)(row[6]));
            }
            if ((false == row.IsNull(7)))
            {
                this._Yybh = ((string)(row[7]));
            }
            if ((false == row.IsNull(8)))
            {
                this._Jsid = ((System.Nullable<int>)(row[8]));
            }
            if ((false == row.IsNull(9)))
            {
                this._Lx = ((System.Nullable<int>)(row[9]));
            }
            if ((false == row.IsNull(10)))
            {
                this._Qdid = ((System.Nullable<int>)(row[10]));
            }
            if ((false == row.IsNull(11)))
            {
                this._Zt = ((int)(row[11]));
            }
            if ((false == row.IsNull(12)))
            {
                this._Bz = ((string)(row[12]));
            }
            if ((false == row.IsNull(13)))
            {
                this._Txlj = ((string)(row[13]));
            }
            this.ReloadQueries(false);
        }

        public override int GetHashCode()
        {
            return base.GetHashCode();
        }

        public override bool Equals(object obj)
        {
            if ((obj == null))
            {
                return false;
            }
            if ((false == typeof(global::SYSEntity.Xt_zhb).IsAssignableFrom(obj.GetType())))
            {
                return false;
            }
            if ((((object)(this)) == ((object)(obj))))
            {
                return true;
            }
            return ((this.isAttached && ((global::SYSEntity.Xt_zhb)(obj)).isAttached)
                        && (this.Id == ((global::SYSEntity.Xt_zhb)(obj)).Id));
        }

        public static @__Columns @__Alias(string aliasName)
        {
            return new @__Columns(aliasName);
        }

        public class @__Columns
        {

            protected string aliasName;

            protected NBear.Common.PropertyItem _Id = new NBear.Common.PropertyItem("Id", "SYSEntity.Xt_zhb");

            protected NBear.Common.PropertyItem _Zh = new NBear.Common.PropertyItem("Zh", "SYSEntity.Xt_zhb");

            protected NBear.Common.PropertyItem _Mm = new NBear.Common.PropertyItem("Mm", "SYSEntity.Xt_zhb");

            protected NBear.Common.PropertyItem _Createtime = new NBear.Common.PropertyItem("Createtime", "SYSEntity.Xt_zhb");

            protected NBear.Common.PropertyItem _Dh = new NBear.Common.PropertyItem("Dh", "SYSEntity.Xt_zhb");

            protected NBear.Common.PropertyItem _Lxr = new NBear.Common.PropertyItem("Lxr", "SYSEntity.Xt_zhb");

            protected NBear.Common.PropertyItem _Ys = new NBear.Common.PropertyItem("Ys", "SYSEntity.Xt_zhb");

            protected NBear.Common.PropertyItem _Yybh = new NBear.Common.PropertyItem("Yybh", "SYSEntity.Xt_zhb");

            protected NBear.Common.PropertyItem _Jsid = new NBear.Common.PropertyItem("Jsid", "SYSEntity.Xt_zhb");

            protected NBear.Common.PropertyItem _Lx = new NBear.Common.PropertyItem("Lx", "SYSEntity.Xt_zhb");

            protected NBear.Common.PropertyItem _Qdid = new NBear.Common.PropertyItem("Qdid", "SYSEntity.Xt_zhb");

            protected NBear.Common.PropertyItem _Zt = new NBear.Common.PropertyItem("Zt", "SYSEntity.Xt_zhb");

            protected NBear.Common.PropertyItem _Bz = new NBear.Common.PropertyItem("Bz", "SYSEntity.Xt_zhb");

            protected NBear.Common.PropertyItem _Txlj = new NBear.Common.PropertyItem("Txlj", "SYSEntity.Xt_zhb");

            public @__Columns()
            {
            }

            public @__Columns(string aliasName)
            {
                this.aliasName = aliasName;
            }

            public NBear.Common.PropertyItem Id
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Id;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("Id", _Id.EntityConfiguration, _Id.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem Zh
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Zh;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("Zh", _Zh.EntityConfiguration, _Zh.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem Mm
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Mm;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("Mm", _Mm.EntityConfiguration, _Mm.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem Createtime
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Createtime;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("Createtime", _Createtime.EntityConfiguration, _Createtime.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem Dh
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Dh;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("Dh", _Dh.EntityConfiguration, _Dh.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem Lxr
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Lxr;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("Lxr", _Lxr.EntityConfiguration, _Lxr.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem Ys
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Ys;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("Ys", _Ys.EntityConfiguration, _Ys.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem Yybh
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Yybh;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("Yybh", _Yybh.EntityConfiguration, _Yybh.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem Jsid
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Jsid;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("Jsid", _Jsid.EntityConfiguration, _Jsid.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem Lx
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Lx;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("Lx", _Lx.EntityConfiguration, _Lx.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem Qdid
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Qdid;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("Qdid", _Qdid.EntityConfiguration, _Qdid.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem Zt
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Zt;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("Zt", _Zt.EntityConfiguration, _Zt.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem Bz
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Bz;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("Bz", _Bz.EntityConfiguration, _Bz.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem Txlj
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Txlj;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("Txlj", _Txlj.EntityConfiguration, _Txlj.PropertyConfiguration, aliasName);
                    }
                }
            }
        }
    }
}
